{"version":3,"sources":["components/animation/hero/heroAttack/heroAttackImage-min.png","components/animation/hero/heroHurt/heroHurt-min.png","components/animation/hero/heroDeath/heroDeath-min.png","components/animation/monster/monsterAttack/monsterAttack.png","components/animation/monster/monsterHurt/monsterHurt.png","components/animation/monster/monsterDeath/monsterDeath.png","components/animation/hero/heroHurt/hurt.mp3","components/animation/hero/heroIdle/heroIdleImage-min.png","components/animation/explosition/explosition.png","components/animation/cure/cure.mp3","components/animation/cure/cure.png","components/animation/monster/monsterAttack/attack.mp3","components/animation/monster/monsterIdle/monsterIdle.png","components/animation/monster/monsterHurt/hurt.mp3","components/audio/pronunciation/blink.wav","components/audio/pronunciation/bound.wav","components/audio/pronunciation/dangle.wav","components/audio/pronunciation/endure.wav","components/audio/pronunciation/fabulous.wav","components/audio/pronunciation/faucet.wav","components/audio/pronunciation/glisten.wav","components/audio/pronunciation/jolt.wav","components/audio/pronunciation/marble.wav","components/audio/pronunciation/smear.wav","components/audio/pronunciation/vicious.wav","components/audio/pronunciation/incisive.wav","components/audio/pronunciation/recluse.wav","components/audio/pronunciation/diminish.wav","components/audio/pronunciation/motto.wav","components/audio/pronunciation/residue.wav","components/audio/pronunciation/nausea.wav","components/audio/pronunciation/obnoxious.wav","components/audio/pronunciation/scatter.wav","components/audio/pronunciation/snarl.wav","components/audio/pronunciation/carve.wav","components/audio/pronunciation/tremble.wav","components/audio/pronunciation/intersection.wav","components/audio/pronunciation/inept.wav","components/audio/pronunciation/pervert.wav","components/audio/pronunciation/nasty.wav","components/audio/pronunciation/mock.wav","components/audio/pronunciation/sag.wav","components/audio/pronunciation/thaw.wav","components/audio/pronunciation/throb.wav","components/audio/pronunciation/caress.wav","components/audio/pronunciation/detest.wav","components/audio/pronunciation/decoy.wav","components/audio/pronunciation/decay.wav","components/audio/pronunciation/savage.wav","reducers/health.js","reducers/user.js","reducers/figth.js","reducers/kill.js","reducers/cure.js","reducers/keyboard.js","reducers/records.js","reducers/index.js","store/configureStore.js","components/loginPage/login.js","actions/login.js","components/animation/hero/heroAttack/index.js","components/animation/hero/heroAttack/heroAttack.js","actions/hurtMonster.js","actions/changeHeroHealth.js","components/animation/hero/heroHurt/index.js","components/animation/hero/heroHurt/heroHurt.js","actions/fightDefault.js","actions/heroDeath.js","components/animation/hero/preload/index.js","components/animation/hero/preload/preloadHero.js","components/animation/hero/heroIdle/index.js","components/animation/hero/heroIdle/heroIdle.js","components/animation/hero/heroDeath/index.js","components/animation/hero/heroDeath/heroDeath.js","components/animation/explosition/index.js","components/animation/explosition/explosition.js","actions/changeMonsterHealth.js","components/animation/cure/cure.js","components/animation/cure/index.js","actions/defaultCure.js","components/hero/index.js","components/hero/hero.js","components/animation/monster/monsterAttack/index.js","components/animation/monster/monsterAttack/monsterAttack.js","actions/hurtHero.js","components/animation/monster/preload/index.js","components/animation/monster/preload/preloadMonster.js","components/animation/monster/monsterIdle/index.js","components/animation/monster/monsterIdle/monsterIdle.js","components/animation/monster/monsterHurt/index.js","components/animation/monster/monsterHurt/monsterHurt.js","actions/monsterDeath.js","components/animation/monster/monsterDeath/index.js","components/animation/monster/monsterDeath/monsterDeath.js","actions/kill.js","components/monster/index.js","components/monster/monster.js","components/health/healthHero/index.js","components/health/healthHero/healthHero.js","components/health/healthMonster/index.js","components/health/healthMonster/healthMonster.js","components/health/healthCommon/index.js","components/health/healthCommon/health.js","components/menu/index.js","components/menu/menu.js","actions/mathKey.js","actions/audioKey.js","actions/translationKey.js","components/mapDispatchToProps/mapDispatchToProps.js","actions/cureHero.js","actions/cureMonster.js","actions/heroAttack.js","actions/monsterAttack.js","actions/defaultKey.js","components/mathematics/randomMathTask.js","components/buttons/index.js","components/buttons/buttons.js","components/mathematics/mathematics.js","components/mathematics/index.js","components/audio/pronunciation/array.js","components/audio/pronunciation/audioGuess.js","components/audio/audio.js","components/audio/index.js","components/translation/vocabulary/translationObject.js","components/translation/vocabulary/randomTranslationTask.js","components/translation/translation.js","components/translation/index.js","retrieve/link.js","retrieve/retrieve.js","retrieve/topTen.js","actions/getTableRecord.js","retrieve/addRowInTable.js","components/loader/index.js","components/loader/loader.js","components/tableRecord/tablerecord.js","components/tableRecord/index.js","components/congratilation/index.js","components/congratilation/congratilation.js","components/modalWindow/index.js","components/modalWindow/modalWindow.js","components/gameLayout/gameLayout.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","monster","hero","login","heroIdle","monsterIdle","heroAttack","monsterAttack","heroHurt","monsterHurt","heroDeath","monsterDeath","kill","cureHero","cureMonster","audioKey","mathKey","translationKey","data","loading","error","rootReducer","combineReducers","health","state","arguments","length","undefined","action","type","Object","objectSpread","payload","user","figth","falseState","cure","keyboard","records","store","createStore","applyMiddleware","thunk","Login","value","textInput","React","createRef","handleChange","event","_this","setState","target","handleSubmit","_this$props","props","setUserLogin","history","preventDefault","push","this","current","focus","react_default","a","createElement","onSubmit","className","ref","onChange","placeholder","Component","withRouter","connect","dispatch","setLogin","HeroAttack","setMonsterHurt","build_default","image","heroAttackImage","widthFrame","heightFrame","steps","fps","onPause","changeHeroHealth","HeroHurt","setFightDefault","setHeroDeath","setHeroHealth","react","HeroHurtImage","lib_default","url","HurtHeroSound","playStatus","Sound","status","PLAYING","PreloadHero","react_preload_image_es","style","display","src","heroHurtImage","heroDeathImage","HeroIdle","heroIdleImage","loop","preload","HeroDeath","HeroDeathImage","Explosition","cureImage","changeMonsterHealth","Cure","_this$props2","setCureDefault","setMonsterHealth","cureSound","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","handleSongFinishedPlaying","Hero","hero_heroIdle","hero_heroAttack","hero_heroHurt","hero_heroDeath","animation_explosition","animation_cure","MonsterAttack","setHeroHurt","monsterAttackImage","MonsterAttackSound","PreloadMonster","monsterHurtImage","monsterDeathImage","MonsterIdle","MonsterIdleImage","monster_preload","MonsterHurt","setFigthDefault","setMonsterDeath","HurtMonsterImage","console","log","HurtMonsterSound","MonsterDeath","setKillMonster","Monster","monster_monsterIdle","monster_monsterAttack","monster_monsterHurt","monster_monsterDeath","HeroHealth","divStyle","border","background","width","concat","height","text","healthMonster","Health","health_healthHero","health_healthMonster","Menu","setMathKey","setAudioKey","setTranslationKey","onClick","react_keyboard_event_handler_default","handleKeys","onKeyEvent","key","e","mapDispatchToProps","setCureHero","setCureMonster","setHeroAttack","setMonsterAttack","setHurtHero","setDefaultKey","randomMathTask","firstNumber","Math","floor","random","secondNumber","mathOperation","result","Buttons","attack","menu","Mathematics","heroCure","_this$state","parseInt","_this$state2","handleMenu","handleHeroAttack","handleHeroCure","_this$props3","handleKeyHeroAttack","ctrlKey","prevState","assign","_this$state3","onKeyDown","components_buttons","audioObject","blink","bound","dangle","endure","fabulous","faucet","glisten","jolt","marble","smear","vicious","incisive","recluse","diminish","motto","residue","nausea","obnoxious","scatter","snarl","carve","tremble","intersection","inept","pervert","nasty","mock","sag","thaw","throb","caress","detest","decoy","decay","savage","audioGuess","obj","keys","Audio","randomKey","audio","audioEl","play","bundle_default","controls","translationObject","translationGuess","Translation","includes","id","link","retrieveRecordTable","Promise","resolve","reject","fetch","then","response","json","record","catch","err","sortFunction","b","round","topTen","array","toConsumableArray","sort","slice","tableRecord","addRowInTable","method","headers","Content-Type","body","JSON","stringify","Loader","TableRecord","getTableRecord","components_loader","color","map","item","window","location","reload","RecordTable","Congratilation","ModalWindow","react_router","path","render","components_mathematics","components_audio","components_menu","components_translation","components_tableRecord","components_congratilation","GameLayout","healthCommon","components_modalWindow","components_hero","components_monster","components_loginPage_login","gameLayout_gameLayout","ReactDOM","es","react_router_dom","src_App_0","document","getElementById"],"mappings":"0FAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC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","file":"static/js/main.0861922e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heroAttackImage-min.fde5ac2b.png\";","module.exports = __webpack_public_path__ + \"static/media/heroHurt-min.06850c83.png\";","module.exports = __webpack_public_path__ + \"static/media/heroDeath-min.636291e9.png\";","module.exports = __webpack_public_path__ + \"static/media/monsterAttack.ab1ba11a.png\";","module.exports = __webpack_public_path__ + \"static/media/monsterHurt.77f1d669.png\";","module.exports = __webpack_public_path__ + \"static/media/monsterDeath.69babb90.png\";","module.exports = __webpack_public_path__ + \"static/media/hurt.9015ff68.mp3\";","module.exports = __webpack_public_path__ + \"static/media/heroIdleImage-min.a8f8dc40.png\";","module.exports = __webpack_public_path__ + \"static/media/explosition.8ea28506.png\";","module.exports = __webpack_public_path__ + \"static/media/cure.1164e2cf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cure.03eb91d2.png\";","module.exports = __webpack_public_path__ + \"static/media/attack.9d70044a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/monsterIdle.b4210d21.png\";","module.exports = __webpack_public_path__ + \"static/media/hurt.dc80fc88.mp3\";","module.exports = __webpack_public_path__ + \"static/media/blink.702f06cf.wav\";","module.exports = __webpack_public_path__ + \"static/media/bound.7a054740.wav\";","module.exports = __webpack_public_path__ + \"static/media/dangle.0ee03510.wav\";","module.exports = __webpack_public_path__ + \"static/media/endure.a5d4c124.wav\";","module.exports = __webpack_public_path__ + \"static/media/fabulous.ca067983.wav\";","module.exports = __webpack_public_path__ + \"static/media/faucet.5a406e67.wav\";","module.exports = __webpack_public_path__ + \"static/media/glisten.81893af0.wav\";","module.exports = __webpack_public_path__ + \"static/media/jolt.00127664.wav\";","module.exports = __webpack_public_path__ + \"static/media/marble.cef458a1.wav\";","module.exports = __webpack_public_path__ + \"static/media/smear.6cc92dad.wav\";","module.exports = __webpack_public_path__ + \"static/media/vicious.7de07caf.wav\";","module.exports = __webpack_public_path__ + \"static/media/incisive.cc11cc4a.wav\";","module.exports = __webpack_public_path__ + \"static/media/recluse.6e1a9298.wav\";","module.exports = __webpack_public_path__ + \"static/media/diminish.25a38b3d.wav\";","module.exports = __webpack_public_path__ + \"static/media/motto.ffaf78eb.wav\";","module.exports = __webpack_public_path__ + \"static/media/residue.16bd8a8b.wav\";","module.exports = __webpack_public_path__ + \"static/media/nausea.63cd2aa2.wav\";","module.exports = __webpack_public_path__ + \"static/media/obnoxious.75b93b0d.wav\";","module.exports = __webpack_public_path__ + \"static/media/scatter.59d5b6f4.wav\";","module.exports = __webpack_public_path__ + \"static/media/snarl.434615c2.wav\";","module.exports = __webpack_public_path__ + \"static/media/carve.0985a6c4.wav\";","module.exports = __webpack_public_path__ + \"static/media/tremble.d4989654.wav\";","module.exports = __webpack_public_path__ + \"static/media/intersection.ff16e99c.wav\";","module.exports = __webpack_public_path__ + \"static/media/inept.7f9c92fc.wav\";","module.exports = __webpack_public_path__ + \"static/media/pervert.5c3172d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/nasty.e2b3f22e.wav\";","module.exports = __webpack_public_path__ + \"static/media/mock.1cfd1b8b.wav\";","module.exports = __webpack_public_path__ + \"static/media/sag.9f94158d.wav\";","module.exports = __webpack_public_path__ + \"static/media/thaw.c93c2c8a.wav\";","module.exports = __webpack_public_path__ + \"static/media/throb.88d007d2.wav\";","module.exports = __webpack_public_path__ + \"static/media/caress.0d03663b.wav\";","module.exports = __webpack_public_path__ + \"static/media/detest.d18f85cb.wav\";","module.exports = __webpack_public_path__ + \"static/media/decoy.0efffbfd.wav\";","module.exports = __webpack_public_path__ + \"static/media/decay.71c1e739.wav\";","module.exports = __webpack_public_path__ + \"static/media/savage.270ead0e.wav\";","const initialState = {\r\n  monster: 100,\r\n  hero: 100,\r\n};\r\n\r\nexport default function healthReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_HERO_HEALTH':\r\n      return {\r\n        ...state,\r\n        hero: state.hero + action.payload,\r\n      };\r\n\r\n    case 'SET_MONSTER_HEALTH':\r\n      return {\r\n        ...state,\r\n        monster: state.monster + action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  login: '',\r\n};\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_LOGIN':\r\n      return {\r\n        ...state,\r\n        login: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  heroIdle: true,\r\n  monsterIdle: true,\r\n  heroAttack: false,\r\n  monsterAttack: false,\r\n  heroHurt: false,\r\n  monsterHurt: false,\r\n  heroDeath: false,\r\n  monsterDeath: false,\r\n};\r\n\r\nexport default function figthReducer(state = initialState, action) {\r\n  const falseState = {\r\n    heroIdle: false,\r\n    monsterIdle: false,\r\n    heroAttack: false,\r\n    monsterAttack: false,\r\n    heroHurt: false,\r\n    monsterHurt: false,\r\n    heroDeath: false,\r\n    monsterDeath: false,\r\n  };\r\n\r\n  switch (action.type) {\r\n    case 'SET_FIGHT_DEFAULT':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroIdle: true,\r\n        monsterIdle: true,\r\n      };\r\n\r\n    case 'SET_ATTACK_HERO':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        monsterIdle: true,\r\n        heroAttack: true,\r\n      };\r\n\r\n    case 'SET_ATTACK_MONSTER':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroIdle: true,\r\n        monsterAttack: true,\r\n      };\r\n\r\n    case 'SET_HURT_HERO':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroHurt: true,\r\n        monsterIdle: true,\r\n      };\r\n\r\n    case 'SET_HURT_MONSTER':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroIdle: true,\r\n        monsterHurt: true,\r\n      };\r\n\r\n    case 'SET_HERO_DEATH':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroDeath: true,\r\n        monsterIdle: true,\r\n      };\r\n\r\n    case 'SET_MONSTER_DEATH':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroIdle: true,\r\n        monsterDeath: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  kill: 0,\r\n};\r\n\r\nexport default function killReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_KILL_MONSTER':\r\n      return {\r\n        ...state,\r\n        kill: state.kill + 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  cureHero: false,\r\n  cureMonster: false,\r\n};\r\n\r\nexport default function cureReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_HERO_CURE':\r\n      return { ...state, cureHero: true };\r\n\r\n    case 'SET_MONSTER_CURE':\r\n      return { ...state, cureMonster: true };\r\n\r\n    case 'SET_DEFAULT_CURE':\r\n      return { ...state, cureHero: false, cureMonster: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  audioKey: false,\r\n  mathKey: false,\r\n  translationKey: false,\r\n};\r\n\r\nexport default function keyboardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_AUDIO_KEY':\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        audioKey: true,\r\n      };\r\n\r\n    case 'SET_MATH_KEY':\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        mathKey: true,\r\n      };\r\n\r\n    case 'SET_TRANSLATION_KEY':\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        translationKey: true,\r\n      };\r\n\r\n    case 'SET_DEFAULT_KEY':\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  data: [],\r\n  loading: true,\r\n  error: '',\r\n};\r\n\r\nexport default function recordsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'LOAD_RECORDS_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n\r\n    case 'LOAD_RECORDS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        loading: false,\r\n      };\r\n\r\n    case 'LOAD_RECORDS_ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\nimport healthReducer from './health';\nimport userReducer from './user';\nimport figthReducer from './figth';\nimport killReducer from './kill';\nimport cureReducer from './cure';\nimport keyboardReducer from './keyboard';\nimport recordsReducer from './records';\n\nconst rootReducer = combineReducers({\n  health: healthReducer,\n  user: userReducer,\n  figth: figthReducer,\n  kill: killReducer,\n  cure: cureReducer,\n  keyboard: keyboardReducer,\n  records: recordsReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk),\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport PropTypes from 'prop-types';\nimport setLogin from '../../actions/login';\nimport './login.css';\n\nclass Login extends Component {\n  state = {\n    value: '',\n  };\n\n  textInput = React.createRef();\n\n  componentDidMount() {\n    this.textInput.current.focus();\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    const { setUserLogin, history } = this.props;\n    const { value } = this.state;\n    event.preventDefault();\n    if (value) history.push('/menu');\n    setUserLogin(value);\n    this.setState({ value: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <input type=\"text\" className=\"form-control\" ref={this.textInput} value={value} onChange={this.handleChange} placeholder=\"Enter login\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-danger\">Submit</button>\n      </form>\n    );\n  }\n}\n\nLogin.propTypes = {\n  setUserLogin: PropTypes.func.isRequired,\n  history: PropTypes.shape(historyPropTypes).isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({ setUserLogin: login => dispatch(setLogin(login)) });\n\nexport default withRouter(connect(\n  null,\n  mapDispatchToProps,\n)(Login));\n","export default function setLogin(login) {\r\n  return {\r\n    type: 'SET_LOGIN',\r\n    payload: login,\r\n  };\r\n}\r\n","import HeroAttack from './heroAttack';\r\n\r\nexport default HeroAttack;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport hurtMonster from '../../../../actions/hurtMonster';\r\nimport heroAttackImage from './heroAttackImage-min.png';\r\nimport './heroAttack.css';\r\n\r\nconst HeroAttack = (props) => {\r\n  const { setMonsterHurt } = props;\r\n  const attackClass = 'hero-attack';\r\n  return (\r\n    <Spritesheet\r\n      className={attackClass}\r\n      image={heroAttackImage}\r\n      widthFrame={685}\r\n      heightFrame={410}\r\n      steps={5}\r\n      fps={10}\r\n      onPause={() => {\r\n        setMonsterHurt();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nHeroAttack.propTypes = {\r\n  setMonsterHurt: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({ setMonsterHurt: () => dispatch(hurtMonster()) });\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(HeroAttack);\r\n","export default function hurtMonster() {\r\n  return {\r\n    type: 'SET_HURT_MONSTER',\r\n  };\r\n}\r\n","export default function changeHeroHealth(health) {\r\n  return {\r\n    type: 'SET_HERO_HEALTH',\r\n    payload: health,\r\n  };\r\n}\r\n","import HeroHurt from './heroHurt';\r\n\r\nexport default HeroHurt;\r\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React, { Fragment } from 'react';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Sound from 'react-sound';\nimport HeroHurtImage from './heroHurt-min.png';\nimport fightDefault from '../../../../actions/fightDefault';\nimport heroDeath from '../../../../actions/heroDeath';\nimport changeHeroHealth from '../../../../actions/changeHeroHealth';\nimport HurtHeroSound from './hurt.mp3';\nimport './heroHurt.css';\n\nconst HeroHurt = (props) => {\n  const {\n    setFightDefault,\n    setHeroDeath,\n    setHeroHealth,\n  } = props;\n  const { health, history } = props;\n  const hurtClass = 'hero-hurt';\n  return (\n    <Fragment>\n      <Spritesheet\n        className={hurtClass}\n        image={HeroHurtImage}\n        widthFrame={490}\n        heightFrame={387}\n        steps={5}\n        fps={10}\n        onPause={() => {\n          if (health > 20) {\n            setHeroHealth(-20);\n            setFightDefault();\n            history.push('/menu');\n          } else {\n            setHeroHealth(-20);\n            setHeroDeath();\n          }\n        }}\n      />\n      <Sound\n        url={HurtHeroSound}\n        playStatus={Sound.status.PLAYING}\n      />\n    </Fragment>\n  );\n};\n\nHeroHurt.propTypes = {\n  setFightDefault: PropTypes.func.isRequired,\n  setHeroDeath: PropTypes.func.isRequired,\n  setHeroHealth: PropTypes.func.isRequired,\n  health: PropTypes.number.isRequired,\n  history: PropTypes.shape(historyPropTypes).isRequired,\n};\n\nconst mapStateToProps = store => ({ health: store.health.hero });\n\nconst mapDispatchToProps = dispatch => ({\n  setFightDefault: () => dispatch(fightDefault()),\n  setHeroDeath: () => dispatch(heroDeath()),\n  setHeroHealth: health => dispatch(changeHeroHealth(health)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(HeroHurt));\n","export default function fightDefault() {\r\n  return {\r\n    type: 'SET_FIGHT_DEFAULT',\r\n  };\r\n}\r\n","export default function heroDeath() {\r\n  return {\r\n    type: 'SET_HERO_DEATH',\r\n  };\r\n}\r\n","import PreloadHero from './preloadHero';\n\nexport default PreloadHero;\n","import React, { Fragment } from 'react';\nimport PreloadImage from 'react-preload-image';\nimport heroHurtImage from '../heroHurt/heroHurt-min.png';\nimport heroAttackImage from '../heroAttack/heroAttackImage-min.png';\nimport heroDeathImage from '../heroDeath/heroDeath-min.png';\n\nconst PreloadHero = () => (\n  <Fragment>\n    <PreloadImage\n      style={{\n        display: 'none',\n      }}\n      src={heroHurtImage}\n    />\n    <PreloadImage\n      style={{\n        display: 'none',\n      }}\n      src={heroAttackImage}\n    />\n    <PreloadImage\n      style={{\n        display: 'none',\n      }}\n      src={heroDeathImage}\n    />\n  </Fragment>\n);\n\nexport default PreloadHero;\n","import HeroIdle from './heroIdle';\r\n\r\nexport default HeroIdle;\r\n","import React, { Fragment } from 'react';\nimport Spritesheet from 'react-responsive-spritesheet';\nimport HeroPreload from '../preload';\nimport heroIdleImage from './heroIdleImage-min.png';\nimport './heroIdle.css';\n\nconst HeroIdle = () => {\n  const idleClass = 'hero-idle';\n  return (\n    <Fragment>\n      <Spritesheet\n        className={idleClass}\n        image={heroIdleImage}\n        widthFrame={387}\n        heightFrame={350}\n        steps={5}\n        fps={10}\n        loop\n      />\n      <HeroPreload />\n    </Fragment>\n  );\n};\n\nexport default HeroIdle;\n","import HeroDeath from './heroDeath';\r\n\r\nexport default HeroDeath;\r\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport PropTypes from 'prop-types';\nimport HeroDeathImage from './heroDeath-min.png';\nimport './heroDeath.css';\n\nconst HeroDeath = (props) => {\n  const { history } = props;\n  const deathClass = 'hero-death';\n  return (\n    <Spritesheet\n      className={deathClass}\n      image={HeroDeathImage}\n      widthFrame={381}\n      heightFrame={350}\n      steps={5}\n      fps={10}\n      onPause={() => {\n        history.push('/records');\n      }}\n    />\n  );\n};\n\nHeroDeath.propTypes = {\n  history: PropTypes.shape(historyPropTypes).isRequired,\n};\n\nexport default withRouter(HeroDeath);\n","import Explosition from './explosition';\r\n\r\nexport default Explosition;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React from 'react';\r\nimport cureImage from './explosition.png';\r\n\r\nconst Explosition = () => (\r\n  <Spritesheet\r\n    image={cureImage}\r\n    widthFrame={192}\r\n    heightFrame={192}\r\n    steps={17}\r\n    fps={10}\r\n  />\r\n);\r\n\r\nexport default Explosition;\r\n","export default function changeMonsterHealth(health) {\r\n  return {\r\n    type: 'SET_MONSTER_HEALTH',\r\n    payload: health,\r\n  };\r\n}\r\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport PropTypes from 'prop-types';\nimport Sound from 'react-sound';\nimport cureDefault from '../../../actions/defaultCure';\nimport changeHeroHealth from '../../../actions/changeHeroHealth';\nimport changeMonsterHealth from '../../../actions/changeMonsterHealth';\nimport cureSound from './cure.mp3';\nimport cureImage from './cure.png';\n\nclass Cure extends Component {\n  render() {\n    const { cure, history } = this.props;\n    const { cureHero, cureMonster } = cure;\n    const {\n      setCureDefault,\n      setHeroHealth,\n      setMonsterHealth,\n    } = this.props;\n    return (\n      <Fragment>\n        <Spritesheet\n          image={cureImage}\n          widthFrame={99}\n          heightFrame={101}\n          steps={10}\n          fps={10}\n          onPause={() => {\n            if (cureHero) setHeroHealth(20);\n            if (cureMonster) setMonsterHealth(20);\n            setCureDefault();\n            history.push('/menu');\n          }}\n        />\n        <Sound\n          url={cureSound}\n          playStatus={Sound.status.PLAYING}\n          onLoading={this.handleSongLoading}\n          onPlaying={this.handleSongPlaying}\n          onFinishedPlaying={this.handleSongFinishedPlaying}\n        />\n      </Fragment>\n    );\n  }\n}\n\nCure.propTypes = {\n  cure: PropTypes.shape({\n    cureHero: PropTypes.bool,\n    cureMonster: PropTypes.bool,\n  }).isRequired,\n  setHeroHealth: PropTypes.func.isRequired,\n  setMonsterHealth: PropTypes.func.isRequired,\n  setCureDefault: PropTypes.func.isRequired,\n  history: PropTypes.shape(historyPropTypes).isRequired,\n};\n\nconst mapStateToProps = store => ({ cure: store.cure });\n\nconst mapDispatchToProps = dispatch => ({\n  setHeroHealth: health => dispatch(changeHeroHealth(health)),\n  setMonsterHealth: health => dispatch(changeMonsterHealth(health)),\n  setCureDefault: () => dispatch(cureDefault()),\n});\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Cure));\n","import Cure from './cure';\r\n\r\nexport default Cure;\r\n","export default function cureDefault() {\r\n  return {\r\n    type: 'SET_DEFAULT_CURE',\r\n  };\r\n}\r\n","import Hero from './hero';\r\n\r\nexport default Hero;\r\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeroAttack from '../animation/hero/heroAttack';\nimport HeroHurt from '../animation/hero/heroHurt';\nimport HeroIdle from '../animation/hero/heroIdle';\nimport HeroDeath from '../animation/hero/heroDeath';\nimport Explosition from '../animation/explosition';\nimport Cure from '../animation/cure';\nimport './hero.css';\n\nconst Hero = (props) => {\n  const {\n    heroIdle,\n    heroHurt,\n    heroAttack,\n    heroDeath,\n  } = props;\n  const { cureHero } = props;\n  return (\n    <Fragment>\n      { heroIdle && <HeroIdle /> }\n      { heroAttack && <HeroAttack /> }\n      { heroHurt && <HeroHurt /> }\n      { heroDeath && <HeroDeath /> }\n      <div className=\"heroExplosition\">\n        { heroHurt && <Explosition /> }\n        { cureHero && <Cure /> }\n      </div>\n    </Fragment>\n  );\n};\n\nHero.propTypes = {\n  heroIdle: PropTypes.bool.isRequired,\n  heroHurt: PropTypes.bool.isRequired,\n  heroAttack: PropTypes.bool.isRequired,\n  heroDeath: PropTypes.bool.isRequired,\n  cureHero: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = store => ({\n  heroIdle: store.figth.heroIdle,\n  heroHurt: store.figth.heroHurt,\n  heroAttack: store.figth.heroAttack,\n  heroDeath: store.figth.heroDeath,\n  cureHero: store.cure.cureHero,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Hero);\n","import MonsterAttack from './monsterAttack';\r\n\r\nexport default MonsterAttack;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Sound from 'react-sound';\r\nimport hurtHero from '../../../../actions/hurtHero';\r\nimport MonsterAttackSound from './attack.mp3';\r\nimport './monsterAttack.css';\r\nimport monsterAttackImage from './monsterAttack.png';\r\n\r\nconst MonsterAttack = (props) => {\r\n  const { setHeroHurt } = props;\r\n  const classAttack = 'monsterAttack';\r\n  return (\r\n    <Fragment>\r\n      <Spritesheet\r\n        className={classAttack}\r\n        image={monsterAttackImage}\r\n        widthFrame={799}\r\n        heightFrame={660}\r\n        steps={10}\r\n        fps={10}\r\n        onPause={() => {\r\n          setHeroHurt();\r\n        }}\r\n      />\r\n      <Sound\r\n        url={MonsterAttackSound}\r\n        playStatus={Sound.status.PLAYING}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMonsterAttack.propTypes = {\r\n  setHeroHurt: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({ setHeroHurt: () => dispatch(hurtHero()) });\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(MonsterAttack);\r\n","export default function hurtHero() {\r\n  return {\r\n    type: 'SET_HURT_HERO',\r\n  };\r\n}\r\n","import PreloadMonster from './preloadMonster';\n\nexport default PreloadMonster;\n","import React, { Fragment } from 'react';\nimport PreloadImage from 'react-preload-image';\nimport monsterHurtImage from '../monsterHurt/monsterHurt.png';\nimport monsterAttackImage from '../monsterAttack/monsterAttack.png';\nimport monsterDeathImage from '../monsterDeath/monsterDeath.png';\n\nconst PreloadMonster = () => (\n  <Fragment>\n    <PreloadImage\n      style={{\n        display: 'none',\n      }}\n      src={monsterHurtImage}\n    />\n    <PreloadImage\n      style={{\n        display: 'none',\n      }}\n      src={monsterAttackImage}\n    />\n    <PreloadImage\n      style={{\n        display: 'none',\n      }}\n      src={monsterDeathImage}\n    />\n  </Fragment>\n);\n\nexport default PreloadMonster;\n","import MonsterIdle from './monsterIdle';\r\n\r\nexport default MonsterIdle;\r\n","import React, { Fragment } from 'react';\nimport Spritesheet from 'react-responsive-spritesheet';\nimport MonsterPreload from '../preload';\nimport MonsterIdleImage from './monsterIdle.png';\nimport './monsterIdle.css';\n\nconst MonsterIdle = () => {\n  const classIdle = 'monster-idle';\n  return (\n    <Fragment>\n      <Spritesheet\n        className={classIdle}\n        image={MonsterIdleImage}\n        widthFrame={528}\n        heightFrame={358}\n        steps={10}\n        fps={10}\n        loop\n      />\n      <MonsterPreload />\n    </Fragment>\n  );\n};\n\nexport default MonsterIdle;\n","import MonsterHurt from './monsterHurt';\r\n\r\nexport default MonsterHurt;\r\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React, { Fragment } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Sound from 'react-sound';\nimport fightDefault from '../../../../actions/fightDefault';\nimport monsterDeath from '../../../../actions/monsterDeath';\nimport changeMonsterHealth from '../../../../actions/changeMonsterHealth';\nimport HurtMonsterSound from './hurt.mp3';\nimport HurtMonsterImage from './monsterHurt.png';\nimport './monsterHurt.css';\n\nconst MonsterHurt = (props) => {\n  const {\n    setFigthDefault,\n    setMonsterDeath,\n    setMonsterHealth,\n    history,\n  } = props;\n  const { health } = props;\n  const hurtClass = 'monster-hurt';\n  return (\n    <Fragment>\n      <Spritesheet\n        className={hurtClass}\n        image={HurtMonsterImage}\n        widthFrame={595}\n        heightFrame={469}\n        steps={10}\n        fps={10}\n        onPause={() => {\n          if (health > 20) {\n            setMonsterHealth(-20);\n            console.log('monsterhurt', props);\n            history.push('/menu');\n            setFigthDefault();\n          } else {\n            setMonsterHealth(-20);\n            setMonsterDeath();\n          }\n        }}\n      />\n      <Sound\n        url={HurtMonsterSound}\n        playStatus={Sound.status.PLAYING}\n      />\n    </Fragment>\n  );\n};\n\nMonsterHurt.propTypes = {\n  setFigthDefault: PropTypes.func.isRequired,\n  setMonsterDeath: PropTypes.func.isRequired,\n  setMonsterHealth: PropTypes.func.isRequired,\n  health: PropTypes.number.isRequired,\n  history: PropTypes.shape(historyPropTypes).isRequired,\n};\n\nconst mapStateToProps = store => ({ health: store.health.monster });\n\nconst mapDispatchToProps = dispatch => ({\n  setMonsterHealth: health => dispatch(changeMonsterHealth(health)),\n  setFigthDefault: () => dispatch(fightDefault()),\n  setMonsterDeath: () => dispatch(monsterDeath()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(MonsterHurt));\n","export default function monsterDeath() {\r\n  return {\r\n    type: 'SET_MONSTER_DEATH',\r\n  };\r\n}\r\n","import MonsterDeath from './monsterDeath.js';\r\nexport default MonsterDeath;","import Spritesheet from 'react-responsive-spritesheet';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport monsterDeath from './monsterDeath.png';\nimport killMonster from '../../../../actions/kill';\nimport './monsterDeath.css';\n\nconst MonsterDeath = (props) => {\n  const { setKillMonster, history } = props;\n  const deathClass = 'monster-death';\n  return (\n    <Spritesheet\n      className={deathClass}\n      image={monsterDeath}\n      widthFrame={592}\n      heightFrame={375}\n      steps={10}\n      fps={10}\n      onPause={() => {\n        setKillMonster();\n        history.push('/congratilation');\n      }}\n    />\n  );\n};\n\nMonsterDeath.propTypes = {\n  setKillMonster: PropTypes.func.isRequired,\n  history: PropTypes.shape(historyPropTypes).isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setKillMonster: () => dispatch(killMonster()),\n});\n\nexport default withRouter(connect(\n  null,\n  mapDispatchToProps,\n)(MonsterDeath));\n","export default function killMonster() {\r\n  return {\r\n    type: 'SET_KILL_MONSTER',\r\n  };\r\n}\r\n","import Monster from './monster';\r\nexport default Monster;","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport MonsterAttack from '../animation/monster/monsterAttack';\nimport MonsterIdle from '../animation/monster/monsterIdle';\nimport MonsterHurt from '../animation/monster/monsterHurt';\nimport MonsterDeath from '../animation/monster/monsterDeath';\nimport Explosition from '../animation/explosition';\nimport Cure from '../animation/cure';\nimport './monster.css';\n\nconst Monster = (props) => {\n  const {\n    monsterIdle,\n    monsterHurt,\n    monsterAttack,\n    monsterDeath,\n    cureMonster,\n  } = props;\n  return (\n    <Fragment>\n      { monsterIdle && <MonsterIdle /> }\n      { monsterAttack && <MonsterAttack /> }\n      { monsterHurt && <MonsterHurt /> }\n      { monsterDeath && <MonsterDeath /> }\n      <div className=\"monsterExplosition\">\n        {monsterHurt && <Explosition />}\n        { cureMonster && <Cure /> }\n      </div>\n    </Fragment>\n  );\n};\n\nMonster.propTypes = {\n  monsterIdle: PropTypes.bool.isRequired,\n  monsterHurt: PropTypes.bool.isRequired,\n  monsterAttack: PropTypes.bool.isRequired,\n  monsterDeath: PropTypes.bool.isRequired,\n  cureMonster: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = store => ({\n  monsterIdle: store.figth.monsterIdle,\n  monsterHurt: store.figth.monsterHurt,\n  monsterAttack: store.figth.monsterAttack,\n  monsterDeath: store.figth.monsterDeath,\n  cureMonster: store.cure.cureMonster,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Monster);\n","import HeroHealth from './healthHero';\r\n\r\nexport default HeroHealth;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './healthHero.css';\r\n\r\nconst HeroHealth = (props) => {\r\n  const { login, health } = props;\r\n\r\n  const divStyle = {\r\n    border: '2px solid white',\r\n    background: 'red',\r\n    width: `${health * 2}px`,\r\n    height: '30px',\r\n    text: 'center',\r\n  };\r\n\r\n  if (health) {\r\n    return (\r\n      <div className=\"health\">\r\n        <h3>{login}</h3>\r\n        <div style={divStyle}><h4>{health}</h4></div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"skullHero\" />\r\n  );\r\n};\r\n\r\nHeroHealth.propTypes = {\r\n  health: PropTypes.number.isRequired,\r\n  login: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  health: store.health.hero,\r\n  login: store.user.login,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null,\r\n)(HeroHealth);\r\n","import healthMonster from './healthMonster';\r\n\r\nexport default healthMonster;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './healthMonster.css';\r\n\r\nconst MonsterHealth = (props) => {\r\n  const { health, kill } = props;\r\n\r\n  const divStyle = {\r\n    border: '2px solid white',\r\n    background: 'red',\r\n    width: `${health * 2}px`,\r\n    height: '30px',\r\n  };\r\n\r\n  if (health) {\r\n    return (\r\n      <div className=\"health\">\r\n        <h3>\r\n          Round &nbsp;\r\n          { kill + 1 }\r\n        </h3>\r\n        <div style={divStyle}><h4>{ health }</h4></div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"skull\" />\r\n  );\r\n};\r\n\r\nMonsterHealth.propTypes = {\r\n  health: PropTypes.number.isRequired,\r\n  kill: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  health: store.health.monster,\r\n  kill: store.kill.kill,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null,\r\n)(MonsterHealth);\r\n","import Health from './health';\r\n\r\nexport default Health;\r\n","import React from 'react';\r\nimport HeroHealth from '../healthHero';\r\nimport MonsterHealth from '../healthMonster';\r\nimport './health.css';\r\n\r\nconst Health = () => (\r\n  <div className=\"flex-health\">\r\n    <HeroHealth />\r\n    <MonsterHealth />\r\n  </div>\r\n);\r\n\r\nexport default Health;\r\n","import Menu from './menu';\r\n\r\nexport default Menu;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport PropTypes from 'prop-types';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport mathKey from '../../actions/mathKey';\nimport audioKey from '../../actions/audioKey';\nimport translationKey from '../../actions/translationKey';\nimport './menu.css';\n\nconst Menu = (props) => {\n  const {\n    setMathKey,\n    setAudioKey,\n    setTranslationKey,\n    history,\n  } = props;\n\n  const handleArithmetics = (event) => {\n    event.preventDefault();\n    history.push('/math');\n  };\n\n  const handleAudio = (event) => {\n    event.preventDefault();\n    history.push('/audio');\n  };\n\n  const handleTranslate = (event) => {\n    event.preventDefault();\n    history.push('/translation');\n  };\n\n  const keyHandle = (event) => {\n    if (event.key === '1') {\n      setMathKey();\n      history.push('/math');\n    }\n\n    if (event.key === '2') {\n      setAudioKey();\n      history.push('/audio');\n    }\n\n    if (event.key === '3') {\n      setTranslationKey();\n      history.push('/translation');\n    }\n  };\n\n  return (\n    <div className=\"casts\">\n      <div className=\"descriptionKeyBoard\">Select task</div>\n      <button className=\"btn select\" type=\"button\" onClick={handleArithmetics}>Math 1</button>\n      <button className=\"btn select\" type=\"button\" onClick={handleAudio}>Audio 2</button>\n      <button className=\"btn select\" type=\"button\" onClick={handleTranslate}>Translate 3</button>\n      <KeyboardEventHandler\n        handleKeys={['1', '2', '3']}\n        onKeyEvent={(key, e) => keyHandle(e)}\n      />\n    </div>\n  );\n};\n\nMenu.propTypes = {\n  setMathKey: PropTypes.func.isRequired,\n  setAudioKey: PropTypes.func.isRequired,\n  setTranslationKey: PropTypes.func.isRequired,\n  history: PropTypes.shape(historyPropTypes).isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setMathKey: () => dispatch(mathKey()),\n  setAudioKey: () => dispatch(audioKey()),\n  setTranslationKey: () => dispatch(translationKey()),\n});\n\nexport default withRouter(connect(\n  null,\n  mapDispatchToProps,\n)(Menu));\n","export default function mathKey() {\r\n  return {\r\n    type: 'SET_MATH_KEY',\r\n  };\r\n}\r\n","export default function audioKey() {\r\n  return {\r\n    type: 'SET_AUDIO_KEY',\r\n  };\r\n}\r\n","export default function translationKey() {\r\n  return {\r\n    type: 'SET_TRANSLATION_KEY',\r\n  };\r\n}\r\n","import cureHero from '../../actions/cureHero';\nimport cureMonster from '../../actions/cureMonster';\nimport heroAttack from '../../actions/heroAttack';\nimport monsterAttack from '../../actions/monsterAttack';\nimport hurtHero from '../../actions/hurtHero';\nimport heroDeath from '../../actions/heroDeath';\nimport monsterDeath from '../../actions/monsterDeath';\nimport defaultKey from '../../actions/defaultKey';\n\nconst mapDispatchToProps = dispatch => ({\n  setCureHero: () => dispatch(cureHero()),\n  setCureMonster: () => dispatch(cureMonster()),\n  setHeroAttack: () => dispatch(heroAttack()),\n  setMonsterAttack: () => dispatch(monsterAttack()),\n  setHurtHero: () => dispatch(hurtHero()),\n  setMonsterDeath: () => dispatch(monsterDeath()),\n  setHeroDeath: () => dispatch(heroDeath()),\n  setDefaultKey: () => dispatch(defaultKey()),\n});\n\nexport default mapDispatchToProps;\n","export default function cureHero() {\r\n  return {\r\n    type: 'SET_HERO_CURE',\r\n  };\r\n}\r\n","export default function cureMonster() {\r\n  return {\r\n    type: 'SET_MONSTER_CURE',\r\n  };\r\n}\r\n","export default function heroAttack() {\r\n  return {\r\n    type: 'SET_ATTACK_HERO',\r\n  };\r\n}\r\n","export default function monsterAttack() {\r\n  return {\r\n    type: 'SET_ATTACK_MONSTER',\r\n  };\r\n}\r\n","export default function defaultKey() {\r\n  return {\r\n    type: 'SET_DEFAULT_KEY',\r\n  };\r\n}\r\n","function randomMathTask() {\r\n  const firstNumber = Math.floor(Math.random() * 100);\r\n  const secondNumber = Math.floor(Math.random() * 100);\r\n  const mathOperation = Math.random() > 0.5 ? '+' : '-';\r\n  const result = mathOperation === '+' ? (firstNumber + secondNumber) : (firstNumber - secondNumber);\r\n  return {\r\n    firstNumber,\r\n    secondNumber,\r\n    mathOperation,\r\n    result,\r\n  };\r\n}\r\n\r\nexport default randomMathTask;\r\n","import Buttons from './buttons';\r\n\r\nexport default Buttons;\r\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\n\nconst Buttons = (props) => {\n  const { attack, cure, menu } = props;\n  return (\n    <Fragment>\n      <button type=\"submit\" className=\"send btn select\" onClick={attack}>Attack(Enter)</button>\n      <button type=\"submit\" className=\"send btn select\" onClick={cure}>Cure(Ctrl)</button>\n      <button type=\"submit\" className=\"send btn select\" onClick={menu}>Back(Esc)</button>\n    </Fragment>\n  );\n};\n\nButtons.propTypes = {\n  attack: PropTypes.func.isRequired,\n  cure: PropTypes.func.isRequired,\n  menu: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport PropTypes from 'prop-types';\nimport mapDispatchToProps from '../mapDispatchToProps/mapDispatchToProps';\nimport randomMathTask from './randomMathTask';\nimport Buttons from '../buttons';\nimport './mathematics.css';\n\nclass Mathematics extends Component {\n  state = {\n    firstNumber: null,\n    secondNumber: null,\n    result: null,\n    value: '',\n  }\n\n  textInput = React.createRef();\n\n  componentDidMount() {\n    this.setState(prevState => (\n      Object.assign(prevState, randomMathTask())\n    ));\n    this.textInput.current.focus();\n  }\n\n  heroCure = () => {\n    const {\n      setCureHero,\n      setCureMonster,\n      history,\n    } = this.props;\n    const { value, result } = this.state;\n    if (parseInt(value, 10) === result) setCureHero();\n    else setCureMonster();\n    history.push('/nothing');\n  }\n\n  heroAttack = () => {\n    const {\n      setHeroAttack,\n      setMonsterAttack,\n      history,\n    } = this.props;\n    const { value, result } = this.state;\n    if (parseInt(value, 10) === result) {\n      setHeroAttack();\n    } else {\n      setMonsterAttack();\n    }\n    history.push('/nothing');\n  }\n\n  handleMenu = (event) => {\n    const { history } = this.props;\n    event.preventDefault();\n    history.push('/menu');\n  };\n\n  handleHeroAttack = (event) => {\n    event.preventDefault();\n    this.heroAttack();\n  };\n\n  handleHeroCure = (event) => {\n    event.preventDefault();\n    this.heroCure();\n  };\n\n  handleChange = (event) => {\n    const { keyboard, setDefaultKey } = this.props;\n    this.setState({ value: event.target.value });\n    if (keyboard) {\n      this.setState({ value: '' });\n      setDefaultKey();\n    }\n  }\n\n  handleKeyHeroAttack = (event) => {\n    const { history } = this.props;\n    if (event.key === 'Enter') {\n      this.heroAttack();\n    }\n\n    if (event.key === 'Escape') {\n      history.push('/menu');\n    }\n\n    if (event.ctrlKey) {\n      this.heroCure();\n    }\n  }\n\n  render() {\n    const {\n      firstNumber,\n      secondNumber,\n      mathOperation,\n      value,\n    } = this.state;\n    return (\n      <div className=\"mathMet\">\n        <span className=\"taskHeading\">Solve an example:</span>\n        <span className=\"task\">\n          {firstNumber}\n          &nbsp;\n          {mathOperation}\n          &nbsp;\n          {secondNumber}\n        </span>\n        <span className=\"taskHeading\">Your answer:</span>\n        <input type=\"text\" ref={this.textInput} value={value} onChange={this.handleChange} onKeyDown={this.handleKeyHeroAttack} />\n        <Buttons attack={this.handleHeroAttack} cure={this.handleHeroCure} menu={this.handleMenu} />\n      </div>\n    );\n  }\n}\n\nMathematics.propTypes = {\n  setDefaultKey: PropTypes.func.isRequired,\n  setMonsterAttack: PropTypes.func.isRequired,\n  setHeroAttack: PropTypes.func.isRequired,\n  setCureHero: PropTypes.func.isRequired,\n  setCureMonster: PropTypes.func.isRequired,\n  keyboard: PropTypes.bool.isRequired,\n  history: PropTypes.shape(historyPropTypes).isRequired,\n};\n\nconst mapStateToProps = store => ({ keyboard: store.keyboard.mathKey });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Mathematics));\n","import Mathematics from './mathematics';\r\n\r\nexport default Mathematics;\r\n","import blink from './blink.wav';\nimport bound from './bound.wav';\nimport dangle from './dangle.wav';\nimport endure from './endure.wav';\nimport fabulous from './fabulous.wav';\nimport faucet from './faucet.wav';\nimport glisten from './glisten.wav';\nimport jolt from './jolt.wav';\nimport marble from './marble.wav';\nimport smear from './smear.wav';\nimport vicious from './vicious.wav';\nimport incisive from './incisive.wav';\nimport recluse from './recluse.wav';\nimport diminish from './diminish.wav';\nimport motto from './motto.wav';\nimport residue from './residue.wav';\nimport nausea from './nausea.wav';\nimport obnoxious from './obnoxious.wav';\nimport scatter from './scatter.wav';\nimport snarl from './snarl.wav';\nimport carve from './carve.wav';\nimport tremble from './tremble.wav';\nimport intersection from './intersection.wav';\nimport inept from './inept.wav';\nimport pervert from './pervert.wav';\nimport nasty from './nasty.wav';\nimport mock from './mock.wav';\nimport sag from './sag.wav';\nimport thaw from './thaw.wav';\nimport throb from './throb.wav';\nimport caress from './caress.wav';\nimport detest from './detest.wav';\nimport decoy from './decoy.wav';\nimport decay from './decay.wav';\nimport savage from './savage.wav';\n\nconst audioObject = {\n  blink,\n  bound,\n  dangle,\n  endure,\n  fabulous,\n  faucet,\n  glisten,\n  jolt,\n  marble,\n  smear,\n  vicious,\n  incisive,\n  recluse,\n  diminish,\n  motto,\n  residue,\n  nausea,\n  obnoxious,\n  scatter,\n  snarl,\n  carve,\n  tremble,\n  intersection,\n  inept,\n  pervert,\n  nasty,\n  mock,\n  sag,\n  thaw,\n  throb,\n  caress,\n  detest,\n  decoy,\n  decay,\n  savage,\n};\n\nexport default audioObject;\n","function audioGuess(obj) {\r\n  const keys = Object.keys(obj);\r\n  return keys[Math.floor(keys.length * Math.random())];\r\n}\r\n\r\nexport default audioGuess;\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport ReactAudioPlayer from 'react-audio-player';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport PropTypes from 'prop-types';\nimport mapDispatchToProps from '../mapDispatchToProps/mapDispatchToProps';\nimport { audioObject, audioGuess } from './pronunciation';\nimport Buttons from '../buttons';\nimport './audio.css';\n\nclass Audio extends Component {\n  state = {\n    value: '',\n    randomKey: '',\n  }\n\n  audio = React.createRef();\n\n  textInput = React.createRef();\n\n  componentDidMount() {\n    this.setState({ randomKey: audioGuess(audioObject) });\n    this.textInput.current.focus();\n  }\n\n  handleMenu = (event) => {\n    const { history } = this.props;\n    event.preventDefault();\n    history.push('/menu');\n  };\n\n  heroCure = () => {\n    const {\n      setCureHero,\n      setCureMonster,\n      history,\n    } = this.props;\n    const { value, randomKey } = this.state;\n    if (value === randomKey) setCureHero();\n    else setCureMonster();\n    history.push('/nothing');\n  }\n\n  heroAttack = () => {\n    const {\n      setHeroAttack,\n      setMonsterAttack,\n      history,\n    } = this.props;\n    const { value, randomKey } = this.state;\n    if (value === randomKey) {\n      setHeroAttack();\n    } else {\n      setMonsterAttack();\n    }\n    history.push('/nothing');\n  }\n\n  handleHeroAttack = (event) => {\n    event.preventDefault();\n    this.heroAttack();\n  };\n\n  handleHeroCure = (event) => {\n    event.preventDefault();\n    this.heroCure();\n  };\n\n  handleChange = (event) => {\n    const { keyboard, setDefaultKey } = this.props;\n    this.setState({ value: event.target.value });\n    if (keyboard) {\n      this.setState({ value: '' });\n      setDefaultKey();\n    }\n  }\n\n  handleKeyHeroAttack = (event) => {\n    const { history } = this.props;\n\n    if (event.key === 'Enter') {\n      this.heroAttack();\n    }\n\n    if (event.key === 'Escape') {\n      history.push('/menu');\n    }\n\n    if (event.ctrlKey) {\n      this.heroCure();\n    }\n\n    if (event.key === 'Shift') {\n      this.audio.current.audioEl.play();\n    }\n  }\n\n  render() {\n    const { value, randomKey } = this.state;\n    return (\n      <div className=\"audioMet\">\n        <span className=\"taskHeading\">Enter the word that you heard(Use Shift to listen word):</span>\n        <span className=\"task\">\n          <ReactAudioPlayer\n            ref={this.audio}\n            src={audioObject[randomKey]}\n            controls\n          />\n        </span>\n        <span className=\"taskHeading\">Your answer:</span>\n        <input type=\"text\" ref={this.textInput} value={value} onChange={this.handleChange} onKeyDown={this.handleKeyHeroAttack} />\n        <Buttons attack={this.handleHeroAttack} cure={this.handleHeroCure} menu={this.handleMenu} />\n      </div>\n    );\n  }\n}\n\nAudio.propTypes = {\n  setDefaultKey: PropTypes.func.isRequired,\n  setMonsterAttack: PropTypes.func.isRequired,\n  setHeroAttack: PropTypes.func.isRequired,\n  setCureHero: PropTypes.func.isRequired,\n  setCureMonster: PropTypes.func.isRequired,\n  keyboard: PropTypes.bool.isRequired,\n  history: PropTypes.shape(historyPropTypes).isRequired,\n};\n\nconst mapStateToProps = store => ({ keyboard: store.keyboard.audioKey });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Audio));\n","import Audio from './audio';\r\n\r\nexport default Audio;\r\n","const translationObject = {\n  blink: ['моргать', 'мигать'],\n  bound: ['непременный', 'обязательный', 'обязанный', 'направляющийся'],\n  dangle: ['свисать', 'манить', 'соблазнять'],\n  endure: ['выносить', 'выдерживать'],\n  fabulous: ['невероятный', 'потрясающий'],\n  faucet: ['кран'],\n  glisten: ['блестеть'],\n  jolt: ['толчок', 'потрясение'],\n  marble: ['мрамор'],\n  smear: ['мазать', 'размазывать', 'порочить', 'пятнать'],\n  vicious: ['жестокий', 'злой', 'злонамерный'],\n  incisive: ['проницательный', 'острый'],\n  recluse: ['затворник'],\n  diminish: ['уменьшать', 'уменьшаться', 'ослабевать'],\n  motto: ['девиз'],\n  residue: ['остаток', 'осадок'],\n  nausea: ['тошнота'],\n  obnoxious: ['оскорбительный', 'мерзкий'],\n  scatter: ['разбрасывать'],\n  snarl: ['рычать', 'огрызаться'],\n  carve: ['вырезать', 'резать'],\n  tremble: ['дрожать', 'трястись'],\n  intersection: ['перекресток'],\n  inept: ['неумелый', 'неспособный'],\n  pervert: ['извращенец'],\n  nasty: ['ужасный', 'противный', 'злобный', 'гадкий', 'угрожающий', 'опасный'],\n  mock: ['осмеивать', 'насмехаться'],\n  sag: ['прогибаться', 'провисать', 'ослабевать'],\n  thaw: ['таять', 'размораживать', 'теплеть'],\n  throb: ['пульсировать', 'сотрясаться'],\n  caress: ['ласкать'],\n  detest: ['ненавидеть'],\n  decoy: ['приманка'],\n  decay: ['разрушаться', 'разлагаться', 'разрушение', 'разложение'],\n  savage: ['жестокий', 'свирепый', 'безжалостный'],\n};\n\nexport default translationObject;\n","function translationGuess(obj) {\r\n  const keys = Object.keys(obj);\r\n  return keys[Math.floor(keys.length * Math.random())];\r\n}\r\n\r\nexport default translationGuess;\r\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport PropTypes from 'prop-types';\nimport mapDispatchToProps from '../mapDispatchToProps/mapDispatchToProps';\nimport { translationObject, translationGuess } from './vocabulary';\nimport Buttons from '../buttons';\nimport './translation.css';\n\nclass Translation extends Component {\n  state = {\n    value: '',\n    randomKey: '',\n  };\n\n  textInput = React.createRef();\n\n  componentDidMount() {\n    this.setState({ randomKey: translationGuess(translationObject) });\n    this.textInput.current.focus();\n  }\n\n  handleMenu = (event) => {\n    const { history } = this.props;\n    event.preventDefault();\n    history.push('/menu');\n  };\n\n  heroCure = () => {\n    const {\n      setCureHero,\n      setCureMonster,\n      history,\n    } = this.props;\n    const {\n      value,\n      randomKey,\n    } = this.state;\n    if (translationObject[randomKey].includes(value)) setCureHero();\n    else setCureMonster();\n    history.push('/nothing');\n  }\n\n  heroAttack = () => {\n    const {\n      setHeroAttack,\n      setMonsterAttack,\n      history,\n    } = this.props;\n    const {\n      value,\n      randomKey,\n    } = this.state;\n    if (translationObject[randomKey].includes(value)) {\n      setHeroAttack();\n    } else {\n      setMonsterAttack();\n    }\n    history.push('/nothing');\n  }\n\n  handleHeroAttack = (event) => {\n    event.preventDefault();\n    this.heroAttack();\n  };\n\n  handleHeroCure = (event) => {\n    event.preventDefault();\n    this.heroCure();\n  };\n\n  handleChange = (event) => {\n    const { keyboard, setDefaultKey } = this.props;\n    this.setState({ value: event.target.value });\n    if (keyboard) {\n      this.setState({ value: '' });\n      setDefaultKey();\n    }\n  }\n\n  handleKeyHeroAttack = (event) => {\n    const { history } = this.props;\n\n    if (event.key === 'Enter') {\n      this.heroAttack();\n    }\n\n    if (event.key === 'Escape') {\n      history.push('/menu');\n    }\n\n    if (event.ctrlKey) {\n      this.heroCure();\n    }\n  }\n\n  render() {\n    const { randomKey, value } = this.state;\n    return (\n      <Fragment>\n        <div className=\"translationMet\">\n          <span className=\"taskHeading\">{randomKey}</span>\n          <span className=\"taskHeading\">Your answer:</span>\n          <input\n            type=\"text\"\n            id=\"userAudioInput\"\n            ref={this.textInput}\n            value={value}\n            onChange={this.handleChange}\n            onKeyDown={this.handleKeyHeroAttack}\n          />\n          <Buttons\n            attack={this.handleHeroAttack}\n            cure={this.handleHeroCure}\n            menu={this.handleMenu}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nTranslation.propTypes = {\n  history: PropTypes.shape(historyPropTypes).isRequired,\n  setDefaultKey: PropTypes.func.isRequired,\n  setMonsterAttack: PropTypes.func.isRequired,\n  setHeroAttack: PropTypes.func.isRequired,\n  setCureHero: PropTypes.func.isRequired,\n  setCureMonster: PropTypes.func.isRequired,\n  keyboard: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = store => ({ keyboard: store.keyboard.translationKey });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Translation));\n","import Translation from './translation';\r\n\r\nexport default Translation;\r\n","const link = 'https://simplegameforfun.herokuapp.com/record/';\r\n\r\nexport default link;\r\n","import link from './link';\r\n\r\nconst retrieveRecordTable = () => (\r\n  new Promise((resolve, reject) => {\r\n    fetch(link)\r\n      .then(response => response.json())\r\n      .then((response) => {\r\n        if (response.record) resolve(response.record);\r\n        else resolve([]);\r\n      })\r\n      .catch(err => reject(err));\r\n  }));\r\n\r\nexport default retrieveRecordTable;\r\n","function sortFunction(a, b) {\r\n  return (b.round - a.round);\r\n}\r\n\r\nconst topTen = array => (\r\n  new Promise((resolve) => {\r\n    const arrayA = [...array];\r\n    resolve(arrayA\r\n      .sort(sortFunction)\r\n      .slice(0, 20));\r\n  }));\r\n\r\nexport default topTen;\r\n","import retrieveRecordTable from '../retrieve/retrieve';\r\nimport topTen from '../retrieve/topTen';\r\n\r\nconst LOAD_RECORDS_LOADING = 'LOAD_RECORDS_LOADING';\r\n\r\nconst tableRecord = () => (dispatch) => {\r\n  dispatch({ type: LOAD_RECORDS_LOADING });\r\n\r\n  retrieveRecordTable()\r\n    .then(data => topTen(data))\r\n    .then((data) => {\r\n      if (data.length) dispatch({ type: 'LOAD_RECORDS_SUCCESS', data });\r\n      else dispatch({ type: 'LOAD_RECORDS_ERROR', error: 'Unexpected Error!!!' });\r\n    });\r\n};\r\n\r\nexport default tableRecord;\r\n","import link from './link';\r\n\r\nconst addRowInTable = (login, round) => (\r\n  new Promise((resolve, reject) => {\r\n    fetch(link, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        login: `${login}`,\r\n        round: `${round}`,\r\n      }),\r\n    })\r\n      .then(data => resolve(data))\r\n      .catch(err => reject(err));\r\n  }));\r\n\r\nexport default addRowInTable;\r\n","import Loader from './loader';\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = () => (\r\n  <div className=\"lds-spinner\">\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport tableRecord from '../../actions/getTableRecord';\r\nimport addRowInTable from '../../retrieve/addRowInTable';\r\nimport Loader from '../loader';\r\nimport './tablerecord.css';\r\n\r\nclass TableRecord extends Component {\r\n  componentDidMount() {\r\n    const { login, kill, getTableRecord } = this.props;\r\n    addRowInTable(login, kill)\r\n      .then(() => getTableRecord())\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const { loading, data, error } = this.props;\r\n\r\n    if (loading) { return <Loader />; }\r\n\r\n    if (error) {\r\n      return (\r\n        <h1 style={{ color: 'red' }}>\r\n          ERROR:\r\n          &nbsp;\r\n          {error}\r\n        </h1>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"tablerecord\">\r\n        <table className=\"record\">\r\n          <thead>\r\n            <tr>\r\n              <th>Login</th>\r\n              <th>Top 20 results</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map(item => (\r\n              <tr key={item.id}>\r\n                <td>{item.login}</td>\r\n                <td>{item.round}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <button className=\"btn select newgame\" type=\"button\" onClick={() => window.location.reload()}>New Game(F5)</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTableRecord.propTypes = {\r\n  login: PropTypes.string.isRequired,\r\n  kill: PropTypes.number.isRequired,\r\n  getTableRecord: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  error: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  login: store.user.login,\r\n  kill: store.kill.kill,\r\n  data: store.records.data,\r\n  loading: store.records.loading,\r\n  error: store.records.error,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getTableRecord: () => dispatch(tableRecord()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(TableRecord);\r\n","import RecordTable from './tablerecord';\r\n\r\nexport default RecordTable;\r\n","import Congratilation from './congratilation';\r\n\r\nexport default Congratilation;\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { history as historyPropTypes } from 'history-prop-types';\nimport changeMonsterHealth from '../../actions/changeMonsterHealth';\nimport fightDefault from '../../actions/fightDefault';\nimport './congratilation.css';\n\nconst Congratilation = (props) => {\n  const {\n    history,\n    setMonsterHealth,\n    setFigthDefault,\n  } = props;\n\n  const handleNewMonster = (event) => {\n    event.preventDefault();\n    setMonsterHealth(100);\n    history.push('/menu');\n    setFigthDefault();\n  };\n\n  const keyHandle = (event) => {\n    if (event.key === 'Enter') {\n      setMonsterHealth(100);\n      history.push('/menu');\n      setFigthDefault();\n    }\n  };\n\n  return (\n    <div className=\"congratWindow\">\n      <span className=\"congratilation\">Congratilation! You win!</span>\n      <button className=\"btn select\" type=\"button\" onClick={handleNewMonster}>Next</button>\n      <KeyboardEventHandler\n        handleKeys={['Enter']}\n        onKeyEvent={(key, e) => keyHandle(e)}\n      />\n    </div>\n  );\n};\n\nCongratilation.propTypes = {\n  setMonsterHealth: PropTypes.func.isRequired,\n  setFigthDefault: PropTypes.func.isRequired,\n  history: PropTypes.shape(historyPropTypes).isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setMonsterHealth: health => dispatch(changeMonsterHealth(health)),\n  setFigthDefault: () => dispatch(fightDefault()),\n});\n\nexport default withRouter(connect(\n  null,\n  mapDispatchToProps,\n)(Congratilation));\n","import ModalWindow from './modalWindow';\r\n\r\nexport default ModalWindow;\r\n","import React from 'react';\nimport { withRouter, BrowserRouter as Router, Route } from 'react-router-dom';\nimport Menu from '../menu';\nimport Mathematics from '../mathematics';\nimport Audio from '../audio';\nimport Translation from '../translation';\nimport TableRecord from '../tableRecord';\nimport Congratilation from '../congratilation';\n\nconst ModalWindow = () => (\n  <div className=\"menuTask\">\n    <Route path=\"/nothing\" render={() => null} />\n    <Route path=\"/math\" render={() => <Mathematics />} />\n    <Route path=\"/audio\" render={() => <Audio />} />\n    <Route path=\"/menu\" render={() => <Menu />} />\n    <Route path=\"/translation\" render={() => <Translation />} />\n    <Route path=\"/records\" render={() => <TableRecord />} />\n    <Route path=\"/congratilation\" render={() => <Congratilation />} />\n  </div>\n);\n\nexport default withRouter(ModalWindow);\n","import React from 'react';\r\nimport Hero from '../hero';\r\nimport Monster from '../monster';\r\nimport HealthCommon from '../health/healthCommon';\r\nimport ModalWindow from '../modalWindow';\r\nimport './gameLayout.css';\r\n\r\nconst GameLayout = () => (\r\n  <div className=\"layout\">\r\n    <HealthCommon />\r\n    <ModalWindow />\r\n    <div className=\"fightArea\">\r\n      <Hero />\r\n      <Monster />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default GameLayout;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Login from './components/loginPage/login';\nimport GameLayout from './components/gameLayout/gameLayout';\nimport './App.css';\n\nconst App = (props) => {\n  const { login } = props;\n  return (\n    <div className=\"App\">\n      { !login && <Login /> }\n      { login && <GameLayout /> }\n    </div>\n  );\n};\n\nApp.propTypes = {\n  login: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = store => ({ login: store.user.login });\n\nexport default connect(\n  mapStateToProps,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}