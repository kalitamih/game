{"version":3,"sources":["components/animation/hero/heroAttack/heroAttackImage-min.png","components/animation/hero/heroHurt/heroHurt-min.png","components/animation/hero/heroHurt/hurt.mp3","components/animation/hero/heroIdle/heroIdleImage-min.png","components/animation/hero/heroDeath/heroDeath-min.png","components/animation/explosition/explosition.png","components/animation/cure/cure.mp3","components/animation/cure/cure.png","components/animation/monster/monsterAttack/attack.mp3","components/animation/monster/monsterAttack/monsterAttack.png","components/animation/monster/monsterIdle/monsterIdle.png","components/animation/monster/monsterHurt/hurt.mp3","components/animation/monster/monsterHurt/monsterHurt.png","components/animation/monster/monsterDeath/monsterDeath.png","components/audio/pronunciation/blink.wav","components/audio/pronunciation/bound.wav","components/audio/pronunciation/dangle.wav","components/audio/pronunciation/endure.wav","components/audio/pronunciation/fabulous.wav","components/audio/pronunciation/faucet.wav","components/audio/pronunciation/glisten.wav","components/audio/pronunciation/jolt.wav","components/audio/pronunciation/marble.wav","components/audio/pronunciation/smear.wav","components/audio/pronunciation/vicious.wav","components/audio/pronunciation/incisive.wav","components/audio/pronunciation/recluse.wav","components/audio/pronunciation/diminish.wav","components/audio/pronunciation/motto.wav","components/audio/pronunciation/residue.wav","components/audio/pronunciation/nausea.wav","components/audio/pronunciation/obnoxious.wav","components/audio/pronunciation/scatter.wav","components/audio/pronunciation/snarl.wav","components/audio/pronunciation/carve.wav","components/audio/pronunciation/tremble.wav","components/audio/pronunciation/intersection.wav","components/audio/pronunciation/inept.wav","components/audio/pronunciation/pervert.wav","components/audio/pronunciation/nasty.wav","components/audio/pronunciation/mock.wav","components/audio/pronunciation/sag.wav","components/audio/pronunciation/thaw.wav","reducers/health.js","reducers/user.js","reducers/layout.js","reducers/figth.js","reducers/kill.js","reducers/cure.js","reducers/keyboard.js","reducers/index.js","store/configureStore.js","components/loginPage/login.js","actions/login.js","components/animation/hero/heroAttack/index.js","components/animation/hero/heroAttack/heroAttack.js","actions/hurtMonster.js","actions/changeHeroHealth.js","components/animation/hero/heroHurt/index.js","components/animation/hero/heroHurt/heroHurt.js","actions/fightDefault.js","actions/heroDeath.js","actions/menuPage.js","components/animation/hero/heroIdle/index.js","components/animation/hero/heroIdle/heroIdle.js","components/animation/hero/heroDeath/index.js","components/animation/hero/heroDeath/heroDeath.js","actions/recordPage.js","components/animation/explosition/index.js","components/animation/explosition/explosition.js","actions/changeMonsterHealth.js","components/animation/cure/cure.js","components/animation/cure/index.js","actions/defaultCure.js","components/hero/index.js","components/hero/hero.js","components/animation/monster/monsterAttack/index.js","components/animation/monster/monsterAttack/monsterAttack.js","actions/hurtHero.js","components/animation/monster/monsterIdle/index.js","components/animation/monster/monsterIdle/monsterIdle.js","components/animation/monster/monsterHurt/index.js","components/animation/monster/monsterHurt/monsterHurt.js","actions/monsterDeath.js","components/animation/monster/monsterDeath/index.js","components/animation/monster/monsterDeath/monsterDeath.js","actions/kill.js","actions/congratilation.js","components/monster/index.js","components/monster/monster.js","components/health/healthHero/index.js","components/health/healthHero/healthHero.js","components/health/healthMonster/index.js","components/health/healthMonster/healthMonster.js","components/health/healthCommon/index.js","components/health/healthCommon/health.js","components/menu/index.js","components/menu/menu.js","actions/mathPage.js","actions/audioPage.js","actions/translationPage.js","actions/mathKey.js","actions/audioKey.js","actions/translationKey.js","components/mapDispatchToProps/mapDispatchToProps.js","actions/cureHero.js","actions/cureMonster.js","actions/heroAttack.js","actions/monsterAttack.js","actions/nothingPage.js","actions/defaultKey.js","components/mathematics/randomMathTask.js","components/buttons/index.js","components/buttons/buttons.js","components/mathematics/mathematics.js","components/mathematics/index.js","components/audio/pronunciation/array.js","components/audio/pronunciation/audioGuess.js","components/audio/audio.js","components/audio/index.js","components/translation/vocabulary/translationObject.js","components/translation/vocabulary/randomTranslationTask.js","components/translation/translation.js","components/translation/index.js","retrieve/link.js","retrieve/retrieve.js","retrieve/topTen.js","retrieve/addRowInTable.js","components/tableRecord/tablerecord.js","components/tableRecord/index.js","components/congratilation/index.js","components/congratilation/congratilation.js","components/modalWindow/index.js","components/modalWindow/modalWindow.js","components/gameLayout/gameLayout.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","monster","hero","login","menu","math","audio","translation","record","congratilation","heroIdle","monsterIdle","heroAttack","monsterAttack","heroHurt","monsterHurt","heroDeath","monsterDeath","kill","cureHero","cureMonster","audioKey","mathKey","translationKey","rootReducer","combineReducers","health","state","arguments","length","undefined","action","type","Object","objectSpread","payload","user","layout","falseObject","figth","falseState","cure","keyboard","store","createStore","Login","value","textInput","React","createRef","handleChange","event","_this","setState","target","handleSubmit","setUserLogin","props","preventDefault","this","current","focus","react_default","a","createElement","onSubmit","className","ref","onChange","placeholder","Component","connect","dispatch","setLogin","HeroAttack","setMonsterHurt","build_default","image","heroAttackImage","widthFrame","heightFrame","steps","fps","onPause","changeHeroHealth","HeroHurt","setFightDefault","setHeroDeath","setHeroHealth","setMenuPage","react","HeroHurtImage","lib_default","url","HurtHeroSound","playStatus","Sound","status","PLAYING","HeroIdle","heroIdleImage","loop","console","log","HeroDeath","setRecordPage","HeroDeathImage","Explosition","cureImage","changeMonsterHealth","Cure","_this$props","setCureDefault","setMonsterHealth","cureSound","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","handleSongFinishedPlaying","Hero","hero_heroIdle","hero_heroAttack","hero_heroHurt","hero_heroDeath","animation_explosition","animation_cure","MonsterAttack","setHeroHurt","monsterAttackImage","MonsterAttackSound","MonsterIdle","MonsterIdleImage","MonsterHurt","setFigthDefault","setMonsterDeath","HurtMonsterImage","HurtMonsterSound","MonsterDeath","setKillMonster","setCongratilationPage","Monster","monster_monsterIdle","monster_monsterAttack","monster_monsterHurt","monster_monsterDeath","HeroHealth","divStyle","border","background","width","concat","height","text","style","healthMonster","Health","health_healthHero","health_healthMonster","Menu","setMathPage","setAudioPage","setTranslatePage","setMathKey","setAudioKey","setTranslationKey","onClick","react_keyboard_event_handler_default","handleKeys","onKeyEvent","key","e","mapDispatchToProps","setCureHero","setCureMonster","setHeroAttack","setMonsterAttack","setHurtHero","setNothingPage","setDefaultKey","randomMathTask","firstNumber","Math","floor","random","secondNumber","mathOperation","result","Buttons","attack","Mathematics","heroCure","_this$state","parseInt","_this$props2","_this$state2","handleMenu","handleHeroAttack","handleHeroCure","_this$props3","handleKeyHeroAttack","ctrlKey","prevState","assign","_this$state3","onKeyDown","components_buttons","audioObject","blink","bound","dangle","endure","fabulous","faucet","glisten","jolt","marble","smear","vicious","incisive","recluse","diminish","motto","residue","nausea","obnoxious","scatter","snarl","carve","tremble","intersection","inept","pervert","nasty","mock","sag","thaw","audioGuess","obj","keys","Audio","randomKey","audioEl","play","bundle_default","src","controls","translationObject","translationGuess","Translation","includes","id","link","retrieveRecordTable","Promise","resolve","reject","fetch","then","response","json","catch","err","sortFunction","b","round","topTen","array","toConsumableArray","sort","slice","addRowInTable","method","headers","Content-Type","body","JSON","stringify","data","TableRecord","_this2","recordTable","map","item","window","location","reload","RecordTable","Congratilation","ModalWindow","components_menu","components_mathematics","components_audio","components_translation","tableRecord","components_congratilation","GameLayout","healthCommon","components_modalWindow","components_hero","components_monster","components_loginPage_login","gameLayout_gameLayout","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"0FAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC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","file":"static/js/main.bb6e9bc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heroAttackImage-min.fde5ac2b.png\";","module.exports = __webpack_public_path__ + \"static/media/heroHurt-min.06850c83.png\";","module.exports = __webpack_public_path__ + \"static/media/hurt.9015ff68.mp3\";","module.exports = __webpack_public_path__ + \"static/media/heroIdleImage-min.a8f8dc40.png\";","module.exports = __webpack_public_path__ + \"static/media/heroDeath-min.636291e9.png\";","module.exports = __webpack_public_path__ + \"static/media/explosition.8ea28506.png\";","module.exports = __webpack_public_path__ + \"static/media/cure.1164e2cf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cure.03eb91d2.png\";","module.exports = __webpack_public_path__ + \"static/media/attack.9d70044a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/monsterAttack.ab1ba11a.png\";","module.exports = __webpack_public_path__ + \"static/media/monsterIdle.b4210d21.png\";","module.exports = __webpack_public_path__ + \"static/media/hurt.dc80fc88.mp3\";","module.exports = __webpack_public_path__ + \"static/media/monsterHurt.77f1d669.png\";","module.exports = __webpack_public_path__ + \"static/media/monsterDeath.69babb90.png\";","module.exports = __webpack_public_path__ + \"static/media/blink.702f06cf.wav\";","module.exports = __webpack_public_path__ + \"static/media/bound.7a054740.wav\";","module.exports = __webpack_public_path__ + \"static/media/dangle.0ee03510.wav\";","module.exports = __webpack_public_path__ + \"static/media/endure.a5d4c124.wav\";","module.exports = __webpack_public_path__ + \"static/media/fabulous.ca067983.wav\";","module.exports = __webpack_public_path__ + \"static/media/faucet.5a406e67.wav\";","module.exports = __webpack_public_path__ + \"static/media/glisten.81893af0.wav\";","module.exports = __webpack_public_path__ + \"static/media/jolt.00127664.wav\";","module.exports = __webpack_public_path__ + \"static/media/marble.cef458a1.wav\";","module.exports = __webpack_public_path__ + \"static/media/smear.6cc92dad.wav\";","module.exports = __webpack_public_path__ + \"static/media/vicious.7de07caf.wav\";","module.exports = __webpack_public_path__ + \"static/media/incisive.cc11cc4a.wav\";","module.exports = __webpack_public_path__ + \"static/media/recluse.6e1a9298.wav\";","module.exports = __webpack_public_path__ + \"static/media/diminish.25a38b3d.wav\";","module.exports = __webpack_public_path__ + \"static/media/motto.ffaf78eb.wav\";","module.exports = __webpack_public_path__ + \"static/media/residue.16bd8a8b.wav\";","module.exports = __webpack_public_path__ + \"static/media/nausea.63cd2aa2.wav\";","module.exports = __webpack_public_path__ + \"static/media/obnoxious.75b93b0d.wav\";","module.exports = __webpack_public_path__ + \"static/media/scatter.59d5b6f4.wav\";","module.exports = __webpack_public_path__ + \"static/media/snarl.434615c2.wav\";","module.exports = __webpack_public_path__ + \"static/media/carve.0985a6c4.wav\";","module.exports = __webpack_public_path__ + \"static/media/tremble.d4989654.wav\";","module.exports = __webpack_public_path__ + \"static/media/intersection.ff16e99c.wav\";","module.exports = __webpack_public_path__ + \"static/media/inept.7f9c92fc.wav\";","module.exports = __webpack_public_path__ + \"static/media/pervert.5c3172d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/nasty.e2b3f22e.wav\";","module.exports = __webpack_public_path__ + \"static/media/mock.1cfd1b8b.wav\";","module.exports = __webpack_public_path__ + \"static/media/sag.9f94158d.wav\";","module.exports = __webpack_public_path__ + \"static/media/thaw.c93c2c8a.wav\";","const initialState = {\n  monster: 100,\n  hero: 100,\n};\n\nexport default function healthReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_HERO_HEALTH':\n      return {\n        ...state,\n        hero: state.hero + action.payload,\n      };\n\n    case 'SET_MONSTER_HEALTH':\n      return {\n        ...state,\n        monster: state.monster + action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  login: '',\n};\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_LOGIN':\n      return {\n        ...state,\n        login: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  menu: true,\n  math: false,\n  audio: false,\n  translation: false,\n  record: false,\n  congratilation: false,\n};\n\nexport default function layoutReducer(state = initialState, action) {\n  const falseObject = {\n    menu: false,\n    math: false,\n    audio: false,\n    translation: false,\n    record: false,\n    congratilation: false,\n  };\n\n  switch (action.type) {\n    case 'SET_MATH_PAGE':\n      return {\n        ...state,\n        ...falseObject,\n        math: true,\n      };\n\n    case 'SET_MENU_PAGE':\n      return {\n        ...state,\n        ...falseObject,\n        menu: true,\n      };\n\n    case 'SET_AUDIO_PAGE':\n      return {\n        ...state,\n        ...falseObject,\n        audio: true,\n      };\n\n    case 'SET_TRANSLATION_PAGE':\n      return {\n        ...state,\n        ...falseObject,\n        translation: true,\n      };\n\n    case 'SET_RECORD_PAGE':\n      return {\n        ...state,\n        ...falseObject,\n        record: true,\n      };\n    case 'SET_CONGRATILATION_PAGE':\n      return {\n        ...state,\n        ...falseObject,\n        congratilation: true,\n      };\n\n    case 'SET_NOTHING_PAGE':\n      return {\n        ...state,\n        ...falseObject,\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  heroIdle: true,\n  monsterIdle: true,\n  heroAttack: false,\n  monsterAttack: false,\n  heroHurt: false,\n  monsterHurt: false,\n  heroDeath: false,\n  monsterDeath: false,\n};\n\nexport default function figthReducer(state = initialState, action) {\n  const falseState = {\n    heroIdle: false,\n    monsterIdle: false,\n    heroAttack: false,\n    monsterAttack: false,\n    heroHurt: false,\n    monsterHurt: false,\n    heroDeath: false,\n    monsterDeath: false,\n  };\n\n  switch (action.type) {\n    case 'SET_FIGHT_DEFAULT':\n      return {\n        ...state,\n        ...falseState,\n        heroIdle: true,\n        monsterIdle: true,\n      };\n\n    case 'SET_ATTACK_HERO':\n      return {\n        ...state,\n        ...falseState,\n        monsterIdle: true,\n        heroAttack: true,\n      };\n\n    case 'SET_ATTACK_MONSTER':\n      return {\n        ...state,\n        ...falseState,\n        heroIdle: true,\n        monsterAttack: true,\n      };\n\n    case 'SET_HURT_HERO':\n      return {\n        ...state,\n        ...falseState,\n        heroHurt: true,\n        monsterIdle: true,\n      };\n\n    case 'SET_HURT_MONSTER':\n      return {\n        ...state,\n        ...falseState,\n        heroIdle: true,\n        monsterHurt: true,\n      };\n\n    case 'SET_HERO_DEATH':\n      return {\n        ...state,\n        ...falseState,\n        heroDeath: true,\n        monsterIdle: true,\n      };\n\n    case 'SET_MONSTER_DEATH':\n      return {\n        ...state,\n        ...falseState,\n        heroIdle: true,\n        monsterDeath: true,\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  kill: 0,\n};\n\nexport default function killReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_KILL_MONSTER':\n      return {\n        ...state,\n        kill: state.kill + 1,\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  cureHero: false,\n  cureMonster: false,\n};\n\nexport default function cureReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_HERO_CURE':\n      return { ...state, cureHero: true };\n\n    case 'SET_MONSTER_CURE':\n      return { ...state, cureMonster: true };\n\n    case 'SET_DEFAULT_CURE':\n      return { ...state, cureHero: false, cureMonster: false };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  audioKey: false,\n  mathKey: false,\n  translationKey: false,\n};\n\nexport default function keyboardReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_AUDIO_KEY':\n      return {\n        ...state,\n        ...initialState,\n        audioKey: true,\n      };\n\n    case 'SET_MATH_KEY':\n      return {\n        ...state,\n        ...initialState,\n        mathKey: true,\n      };\n\n    case 'SET_TRANSLATION_KEY':\n      return {\n        ...state,\n        ...initialState,\n        translationKey: true,\n      };\n\n    case 'SET_DEFAULT_KEY':\n      return {\n        ...state,\n        ...initialState,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport healthReducer from './health';\nimport userReducer from './user';\nimport layoutReducer from './layout';\nimport figthReducer from './figth';\nimport killReducer from './kill';\nimport cureReducer from './cure';\nimport keyboardReducer from './keyboard';\n\nconst rootReducer = combineReducers({\n  health: healthReducer,\n  user: userReducer,\n  layout: layoutReducer,\n  figth: figthReducer,\n  kill: killReducer,\n  cure: cureReducer,\n  keyboard: keyboardReducer,\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport setLogin from '../../actions/login';\nimport './login.css';\n\nclass Login extends Component {\n  state = {\n    value: '',\n  };\n\n  textInput = React.createRef();\n\n  componentDidMount() {\n    this.textInput.current.focus();\n  }\n\n  handleChange = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    const { setUserLogin } = this.props;\n    const { value } = this.state;\n    event.preventDefault();\n    setUserLogin(value);\n    this.setState({ value: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"form-group\">\n          <input type=\"text\" className=\"form-control\" ref={this.textInput} value={value} onChange={this.handleChange} placeholder=\"Enter login\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-danger\">Submit</button>\n      </form>\n    );\n  }\n}\n\nLogin.propTypes = {\n  setUserLogin: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({ setUserLogin: login => dispatch(setLogin(login)) });\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Login);\n","export default function setLogin(login) {\n  return {\n    type: 'SET_LOGIN',\n    payload: login,\n  };\n}\n","import HeroAttack from './heroAttack';\r\n\r\nexport default HeroAttack;\r\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport hurtMonster from '../../../../actions/hurtMonster';\nimport heroAttackImage from './heroAttackImage-min.png';\nimport './heroAttack.css';\n\nconst HeroAttack = (props) => {\n  const { setMonsterHurt } = props;\n  const attackClass = 'hero-attack';\n  return (\n    <Spritesheet\n      className={attackClass}\n      image={heroAttackImage}\n      widthFrame={685}\n      heightFrame={410}\n      steps={5}\n      fps={10}\n      onPause={() => {\n        setMonsterHurt();\n      }}\n    />\n  );\n};\n\nHeroAttack.propTypes = {\n  setMonsterHurt: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({ setMonsterHurt: () => dispatch(hurtMonster()) });\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(HeroAttack);\n","export default function hurtMonster() {\n  return {\n    type: 'SET_HURT_MONSTER',\n  };\n}\n","export default function changeHeroHealth(health) {\n  return {\n    type: 'SET_HERO_HEALTH',\n    payload: health,\n  };\n}\n","import HeroHurt from './heroHurt';\r\n\r\nexport default HeroHurt;\r\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Sound from 'react-sound';\nimport HeroHurtImage from './heroHurt-min.png';\nimport fightDefault from '../../../../actions/fightDefault';\nimport heroDeath from '../../../../actions/heroDeath';\nimport changeHeroHealth from '../../../../actions/changeHeroHealth';\nimport menuPage from '../../../../actions/menuPage';\nimport HurtHeroSound from './hurt.mp3';\nimport './heroHurt.css';\n\nconst HeroHurt = (props) => {\n  const {\n    setFightDefault,\n    setHeroDeath,\n    setHeroHealth,\n    setMenuPage,\n  } = props;\n  const { health } = props;\n  const hurtClass = 'hero-hurt';\n  return (\n    <Fragment>\n      <Spritesheet\n        className={hurtClass}\n        image={HeroHurtImage}\n        widthFrame={490}\n        heightFrame={387}\n        steps={5}\n        fps={10}\n        onPause={() => {\n          if (health > 20) {\n            setHeroHealth(-20);\n            setMenuPage();\n            setFightDefault();\n          } else {\n            setHeroHealth(-20);\n            setHeroDeath();\n          }\n        }}\n      />\n      <Sound\n        url={HurtHeroSound}\n        playStatus={Sound.status.PLAYING}\n      />\n    </Fragment>\n  );\n};\n\nHeroHurt.propTypes = {\n  setFightDefault: PropTypes.func.isRequired,\n  setHeroDeath: PropTypes.func.isRequired,\n  setHeroHealth: PropTypes.func.isRequired,\n  setMenuPage: PropTypes.func.isRequired,\n  health: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = store => ({ health: store.health.hero });\n\nconst mapDispatchToProps = dispatch => ({\n  setFightDefault: () => dispatch(fightDefault()),\n  setHeroDeath: () => dispatch(heroDeath()),\n  setHeroHealth: health => dispatch(changeHeroHealth(health)),\n  setMenuPage: () => dispatch(menuPage()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(HeroHurt);\n","export default function fightDefault() {\n  return {\n    type: 'SET_FIGHT_DEFAULT',\n  };\n}\n","export default function heroDeath() {\n  return {\n    type: 'SET_HERO_DEATH',\n  };\n}\n","export default function menuPage() {\n  return {\n    type: 'SET_MENU_PAGE',\n  };\n}\n","import HeroIdle from './heroIdle';\n\nexport default HeroIdle;\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React from 'react';\nimport heroIdleImage from './heroIdleImage-min.png';\nimport './heroIdle.css';\n\nconst HeroIdle = () => {\n  const idleClass = 'hero-idle';\n  return (\n    <Spritesheet\n      className={idleClass}\n      image={heroIdleImage}\n      widthFrame={387}\n      heightFrame={350}\n      steps={5}\n      fps={10}\n      loop\n      onPause={() => {\n        console.log('onPause');\n      }}\n    />\n  );\n};\n\nexport default HeroIdle;\n","import HeroDeath from './heroDeath';\n\nexport default HeroDeath;\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeroDeathImage from './heroDeath-min.png';\nimport recordPage from '../../../../actions/recordPage';\nimport './heroDeath.css';\n\nconst HeroDeath = (props) => {\n  const { setRecordPage } = props;\n  const deathClass = 'hero-death';\n  return (\n    <Spritesheet\n      className={deathClass}\n      image={HeroDeathImage}\n      widthFrame={381}\n      heightFrame={350}\n      steps={5}\n      fps={10}\n      onPause={() => {\n        setRecordPage();\n      }}\n    />\n  );\n};\n\nHeroDeath.propTypes = {\n  setRecordPage: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({ setRecordPage: () => dispatch(recordPage()) });\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(HeroDeath);\n","export default function recordPage() {\n  return {\n    type: 'SET_RECORD_PAGE',\n  };\n}\n","import Explosition from './explosition';\n\nexport default Explosition;\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React from 'react';\nimport cureImage from './explosition.png';\n\nconst Explosition = () => (\n  <Spritesheet\n    image={cureImage}\n    widthFrame={192}\n    heightFrame={192}\n    steps={17}\n    fps={10}\n  />\n);\n\nexport default Explosition;\n","export default function changeMonsterHealth(health) {\n  return {\n    type: 'SET_MONSTER_HEALTH',\n    payload: health,\n  };\n}\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Sound from 'react-sound';\nimport cureDefault from '../../../actions/defaultCure';\nimport changeHeroHealth from '../../../actions/changeHeroHealth';\nimport changeMonsterHealth from '../../../actions/changeMonsterHealth';\nimport menuPage from '../../../actions/menuPage';\nimport cureSound from './cure.mp3';\nimport cureImage from './cure.png';\n\nclass Cure extends Component {\n  render() {\n    const { cure } = this.props;\n    const { cureHero, cureMonster } = cure;\n    const {\n      setCureDefault,\n      setHeroHealth,\n      setMonsterHealth,\n      setMenuPage,\n    } = this.props;\n    return (\n      <Fragment>\n        <Spritesheet\n          image={cureImage}\n          widthFrame={99}\n          heightFrame={101}\n          steps={10}\n          fps={10}\n          onPause={() => {\n            if (cureHero) setHeroHealth(20);\n            if (cureMonster) setMonsterHealth(20);\n            setCureDefault();\n            setMenuPage();\n          }}\n        />\n        <Sound\n          url={cureSound}\n          playStatus={Sound.status.PLAYING}\n          onLoading={this.handleSongLoading}\n          onPlaying={this.handleSongPlaying}\n          onFinishedPlaying={this.handleSongFinishedPlaying}\n        />\n      </Fragment>\n    );\n  }\n}\n\nCure.propTypes = {\n  cure: PropTypes.shape({\n    cureHero: PropTypes.bool,\n    cureMonster: PropTypes.bool,\n  }).isRequired,\n  setMenuPage: PropTypes.func.isRequired,\n  setHeroHealth: PropTypes.func.isRequired,\n  setMonsterHealth: PropTypes.func.isRequired,\n  setCureDefault: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = store => ({ cure: store.cure });\n\nconst mapDispatchToProps = dispatch => ({\n  setMenuPage: () => dispatch(menuPage()),\n  setHeroHealth: health => dispatch(changeHeroHealth(health)),\n  setMonsterHealth: health => dispatch(changeMonsterHealth(health)),\n  setCureDefault: () => dispatch(cureDefault()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Cure);\n","import Cure from './cure';\n\nexport default Cure;\n","export default function cureDefault() {\n  return {\n    type: 'SET_DEFAULT_CURE',\n  };\n}\n","import Hero from './hero';\n\nexport default Hero;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport HeroAttack from '../animation/hero/heroAttack';\nimport HeroHurt from '../animation/hero/heroHurt';\nimport HeroIdle from '../animation/hero/heroIdle';\nimport HeroDeath from '../animation/hero/heroDeath';\nimport Explosition from '../animation/explosition';\nimport Cure from '../animation/cure';\nimport './hero.css';\n\nconst Hero = (props) => {\n  const {\n    heroIdle,\n    heroHurt,\n    heroAttack,\n    heroDeath,\n  } = props;\n  const { cureHero } = props;\n  return (\n    <Fragment>\n      { heroIdle && <HeroIdle /> }\n      { heroAttack && <HeroAttack /> }\n      { heroHurt && <HeroHurt /> }\n      { heroDeath && <HeroDeath /> }\n      <div className=\"heroExplosition\">\n        { heroHurt && <Explosition /> }\n        { cureHero && <Cure /> }\n      </div>\n    </Fragment>\n  );\n};\n\nHero.propTypes = {\n  heroIdle: PropTypes.bool.isRequired,\n  heroHurt: PropTypes.bool.isRequired,\n  heroAttack: PropTypes.bool.isRequired,\n  heroDeath: PropTypes.bool.isRequired,\n  cureHero: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = store => ({\n  heroIdle: store.figth.heroIdle,\n  heroHurt: store.figth.heroHurt,\n  heroAttack: store.figth.heroAttack,\n  heroDeath: store.figth.heroDeath,\n  cureHero: store.cure.cureHero,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Hero);\n","import MonsterAttack from './monsterAttack';\n\nexport default MonsterAttack;\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Sound from 'react-sound';\nimport hurtHero from '../../../../actions/hurtHero';\nimport MonsterAttackSound from './attack.mp3';\nimport './monsterAttack.css';\nimport monsterAttackImage from './monsterAttack.png';\n\nconst MonsterAttack = (props) => {\n  const { setHeroHurt } = props;\n  const classAttack = 'monsterAttack';\n  return (\n    <Fragment>\n      <Spritesheet\n        className={classAttack}\n        image={monsterAttackImage}\n        widthFrame={799}\n        heightFrame={660}\n        steps={10}\n        fps={10}\n        onPause={() => {\n          setHeroHurt();\n        }}\n      />\n      <Sound\n        url={MonsterAttackSound}\n        playStatus={Sound.status.PLAYING}\n      />\n    </Fragment>\n  );\n};\n\nMonsterAttack.propTypes = {\n  setHeroHurt: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({ setHeroHurt: () => dispatch(hurtHero()) });\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(MonsterAttack);\n","export default function hurtHero() {\n  return {\n    type: 'SET_HURT_HERO',\n  };\n}\n","import MonsterIdle from './monsterIdle';\n\nexport default MonsterIdle;\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React from 'react';\nimport MonsterIdleImage from './monsterIdle.png';\nimport './monsterIdle.css';\n\nconst MonsterIdle = () => {\n  const classIdle = 'monster-idle';\n  return (\n    <Spritesheet\n      className={classIdle}\n      image={MonsterIdleImage}\n      widthFrame={528}\n      heightFrame={358}\n      steps={10}\n      fps={10}\n      loop\n    />\n  );\n};\n\nexport default MonsterIdle;\n","import MonsterHurt from './monsterHurt';\n\nexport default MonsterHurt;\n","import Spritesheet from 'react-responsive-spritesheet';\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Sound from 'react-sound';\nimport fightDefault from '../../../../actions/fightDefault';\nimport monsterDeath from '../../../../actions/monsterDeath';\nimport changeMonsterHealth from '../../../../actions/changeMonsterHealth';\nimport menuPage from '../../../../actions/menuPage';\nimport HurtMonsterSound from './hurt.mp3';\nimport HurtMonsterImage from './monsterHurt.png';\nimport './monsterHurt.css';\n\nconst MonsterHurt = (props) => {\n  const {\n    setFigthDefault,\n    setMonsterDeath,\n    setMonsterHealth,\n    setMenuPage,\n  } = props;\n  const { health } = props;\n  const hurtClass = 'monster-hurt';\n  return (\n    <Fragment>\n      <Spritesheet\n        className={hurtClass}\n        image={HurtMonsterImage}\n        widthFrame={595}\n        heightFrame={469}\n        steps={10}\n        fps={10}\n        onPause={() => {\n          if (health > 20) {\n            setMonsterHealth(-20);\n            setMenuPage();\n            setFigthDefault();\n          } else {\n            setMonsterHealth(-20);\n            setMonsterDeath();\n          }\n        }}\n      />\n      <Sound\n        url={HurtMonsterSound}\n        playStatus={Sound.status.PLAYING}\n      />\n    </Fragment>\n  );\n};\n\nMonsterHurt.propTypes = {\n  setFigthDefault: PropTypes.func.isRequired,\n  setMonsterDeath: PropTypes.func.isRequired,\n  setMonsterHealth: PropTypes.func.isRequired,\n  setMenuPage: PropTypes.func.isRequired,\n  health: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = store => ({ health: store.health.monster });\n\nconst mapDispatchToProps = dispatch => ({\n  setMonsterHealth: health => dispatch(changeMonsterHealth(health)),\n  setFigthDefault: () => dispatch(fightDefault()),\n  setMonsterDeath: () => dispatch(monsterDeath()),\n  setMenuPage: () => dispatch(menuPage()),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MonsterHurt);\n","export default function monsterDeath() {\n  return {\n    type: 'SET_MONSTER_DEATH',\n  };\n}\n","import MonsterDeath from './monsterDeath.js';\r\nexport default MonsterDeath;","import Spritesheet from 'react-responsive-spritesheet';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport monsterDeath from './monsterDeath.png';\nimport killMonster from '../../../../actions/kill';\nimport congratilationPage from '../../../../actions/congratilation';\nimport './monsterDeath.css';\n\nconst MonsterDeath = (props) => {\n  const { setKillMonster, setCongratilationPage } = props;\n  const deathClass = 'monster-death';\n  return (\n    <Spritesheet\n      className={deathClass}\n      image={monsterDeath}\n      widthFrame={592}\n      heightFrame={375}\n      steps={10}\n      fps={10}\n      onPause={() => {\n        setKillMonster();\n        setCongratilationPage();\n      }}\n    />\n  );\n};\n\nMonsterDeath.propTypes = {\n  setKillMonster: PropTypes.func.isRequired,\n  setCongratilationPage: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setKillMonster: () => dispatch(killMonster()),\n  setCongratilationPage: () => dispatch(congratilationPage()),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(MonsterDeath);\n","export default function killMonster() {\n  return {\n    type: 'SET_KILL_MONSTER',\n  };\n}\n","export default function congratilationPage() {\n  return {\n    type: 'SET_CONGRATILATION_PAGE',\n  };\n}\n","import Monster from './monster';\r\nexport default Monster;","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport MonsterAttack from '../animation/monster/monsterAttack';\nimport MonsterIdle from '../animation/monster/monsterIdle';\nimport MonsterHurt from '../animation/monster/monsterHurt';\nimport MonsterDeath from '../animation/monster/monsterDeath';\nimport Explosition from '../animation/explosition';\nimport Cure from '../animation/cure';\nimport './monster.css';\n\nconst Monster = (props) => {\n  const {\n    monsterIdle,\n    monsterHurt,\n    monsterAttack,\n    monsterDeath,\n    cureMonster,\n  } = props;\n  return (\n    <Fragment>\n      { monsterIdle && <MonsterIdle /> }\n      { monsterAttack && <MonsterAttack /> }\n      { monsterHurt && <MonsterHurt /> }\n      { monsterDeath && <MonsterDeath /> }\n      <div className=\"monsterExplosition\">\n        {monsterHurt && <Explosition />}\n        { cureMonster && <Cure /> }\n      </div>\n    </Fragment>\n  );\n};\n\nMonster.propTypes = {\n  monsterIdle: PropTypes.bool.isRequired,\n  monsterHurt: PropTypes.bool.isRequired,\n  monsterAttack: PropTypes.bool.isRequired,\n  monsterDeath: PropTypes.bool.isRequired,\n  cureMonster: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = store => ({\n  monsterIdle: store.figth.monsterIdle,\n  monsterHurt: store.figth.monsterHurt,\n  monsterAttack: store.figth.monsterAttack,\n  monsterDeath: store.figth.monsterDeath,\n  cureMonster: store.cure.cureMonster,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Monster);\n","import HeroHealth from './healthHero';\n\nexport default HeroHealth;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './healthHero.css';\n\nconst HeroHealth = (props) => {\n  const { login, health } = props;\n\n  const divStyle = {\n    border: '2px solid white',\n    background: 'red',\n    width: `${health * 2}px`,\n    height: '30px',\n    text: 'center',\n  };\n\n  if (health) {\n    return (\n      <div className=\"health\">\n        <h3>{login}</h3>\n        <div style={divStyle}><h4>{health}</h4></div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"skullHero\" />\n  );\n};\n\nHeroHealth.propTypes = {\n  health: PropTypes.number.isRequired,\n  login: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = store => ({\n  health: store.health.hero,\n  login: store.user.login,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(HeroHealth);\n","import healthMonster from './healthMonster';\n\nexport default healthMonster;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './healthMonster.css';\n\nconst MonsterHealth = (props) => {\n  const { health, kill } = props;\n\n  const divStyle = {\n    border: '2px solid white',\n    background: 'red',\n    width: `${health * 2}px`,\n    height: '30px',\n  };\n\n  if (health) {\n    return (\n      <div className=\"health\">\n        <h3>\n          Round &nbsp;\n          { kill + 1 }\n        </h3>\n        <div style={divStyle}><h4>{ health }</h4></div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"skull\" />\n  );\n};\n\nMonsterHealth.propTypes = {\n  health: PropTypes.number.isRequired,\n  kill: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = store => ({\n  health: store.health.monster,\n  kill: store.kill.kill,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(MonsterHealth);\n","import Health from './health';\n\nexport default Health;\n","import React from 'react';\nimport HeroHealth from '../healthHero';\nimport MonsterHealth from '../healthMonster';\nimport './health.css';\n\nconst Health = () => (\n  <div className=\"flex-health\">\n    <HeroHealth />\n    <MonsterHealth />\n  </div>\n);\n\nexport default Health;\n","import Menu from './menu';\n\nexport default Menu;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport mathPage from '../../actions/mathPage';\nimport audioPage from '../../actions/audioPage';\nimport translationPage from '../../actions/translationPage';\nimport mathKey from '../../actions/mathKey';\nimport audioKey from '../../actions/audioKey';\nimport translationKey from '../../actions/translationKey';\nimport './menu.css';\n\nconst Menu = (props) => {\n  const {\n    setMathPage,\n    setAudioPage,\n    setTranslatePage,\n    setMathKey,\n    setAudioKey,\n    setTranslationKey,\n  } = props;\n\n  const handleArithmetics = (event) => {\n    event.preventDefault();\n    setMathPage();\n  };\n\n  const handleAudio = (event) => {\n    event.preventDefault();\n    setAudioPage();\n  };\n\n  const handleTranslate = (event) => {\n    event.preventDefault();\n    setTranslatePage();\n  };\n\n  const keyHandle = (event) => {\n    if (event.key === '1') {\n      setMathKey();\n      setMathPage();\n    }\n\n    if (event.key === '2') {\n      setAudioKey();\n      setAudioPage();\n    }\n\n    if (event.key === '3') {\n      setTranslationKey();\n      setTranslatePage();\n    }\n  };\n\n  return (\n    <div className=\"casts\">\n      <div className=\"descriptionKeyBoard\">Select task</div>\n      <button className=\"btn select\" type=\"button\" onClick={handleArithmetics}>Math 1</button>\n      <button className=\"btn select\" type=\"button\" onClick={handleAudio}>Audio 2</button>\n      <button className=\"btn select\" type=\"button\" onClick={handleTranslate}>Translate 3</button>\n      <KeyboardEventHandler\n        handleKeys={['1', '2', '3']}\n        onKeyEvent={(key, e) => keyHandle(e)}\n      />\n    </div>\n  );\n};\n\nMenu.propTypes = {\n  setMathPage: PropTypes.func.isRequired,\n  setAudioPage: PropTypes.func.isRequired,\n  setTranslatePage: PropTypes.func.isRequired,\n  setMathKey: PropTypes.func.isRequired,\n  setAudioKey: PropTypes.func.isRequired,\n  setTranslationKey: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setMathPage: () => dispatch(mathPage()),\n  setAudioPage: () => dispatch(audioPage()),\n  setTranslatePage: () => dispatch(translationPage()),\n  setMathKey: () => dispatch(mathKey()),\n  setAudioKey: () => dispatch(audioKey()),\n  setTranslationKey: () => dispatch(translationKey()),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Menu);\n","export default function mathPage() {\n  return {\n    type: 'SET_MATH_PAGE',\n  };\n}\n","export default function audioPage() {\n  return {\n    type: 'SET_AUDIO_PAGE',\n  };\n}\n","export default function translationPage() {\n  return {\n    type: 'SET_TRANSLATION_PAGE',\n  };\n}\n","export default function mathKey() {\n  return {\n    type: 'SET_MATH_KEY',\n  };\n}\n","export default function audioKey() {\n  return {\n    type: 'SET_AUDIO_KEY',\n  };\n}\n","export default function translationKey() {\n  return {\n    type: 'SET_TRANSLATION_KEY',\n  };\n}\n","import menuPage from '../../actions/menuPage';\nimport cureHero from '../../actions/cureHero';\nimport cureMonster from '../../actions/cureMonster';\nimport heroAttack from '../../actions/heroAttack';\nimport monsterAttack from '../../actions/monsterAttack';\nimport hurtHero from '../../actions/hurtHero';\nimport heroDeath from '../../actions/heroDeath';\nimport monsterDeath from '../../actions/monsterDeath';\nimport nothingPage from '../../actions/nothingPage';\nimport defaultKey from '../../actions/defaultKey';\n\nconst mapDispatchToProps = dispatch => ({\n  setMenuPage: () => dispatch(menuPage()),\n  setCureHero: () => dispatch(cureHero()),\n  setCureMonster: () => dispatch(cureMonster()),\n  setHeroAttack: () => dispatch(heroAttack()),\n  setMonsterAttack: () => dispatch(monsterAttack()),\n  setHurtHero: () => dispatch(hurtHero()),\n  setMonsterDeath: () => dispatch(monsterDeath()),\n  setHeroDeath: () => dispatch(heroDeath()),\n  setNothingPage: () => dispatch(nothingPage()),\n  setDefaultKey: () => dispatch(defaultKey()),\n});\n\nexport default mapDispatchToProps;\n","export default function cureHero() {\n  return {\n    type: 'SET_HERO_CURE',\n  };\n}\n","export default function cureMonster() {\n  return {\n    type: 'SET_MONSTER_CURE',\n  };\n}\n","export default function heroAttack() {\n  return {\n    type: 'SET_ATTACK_HERO',\n  };\n}\n","export default function monsterAttack() {\n  return {\n    type: 'SET_ATTACK_MONSTER',\n  };\n}\n","export default function nothingPage() {\n  return {\n    type: 'SET_NOTHING_PAGE',\n  };\n}\n","export default function defaultKey() {\n  return {\n    type: 'SET_DEFAULT_KEY',\n  };\n}\n","function randomMathTask() {\n  const firstNumber = Math.floor(Math.random() * 100);\n  const secondNumber = Math.floor(Math.random() * 100);\n  const mathOperation = Math.random() > 0.5 ? '+' : '-';\n  const result = mathOperation === '+' ? (firstNumber + secondNumber) : (firstNumber - secondNumber);\n  return {\n    firstNumber,\n    secondNumber,\n    mathOperation,\n    result,\n  };\n}\n\nexport default randomMathTask;\n","import Buttons from './buttons';\n\nexport default Buttons;\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\n\nconst Buttons = (props) => {\n  const { attack, cure, menu } = props;\n  return (\n  <Fragment>\n    <button type=\"submit\" className=\"send btn select\" onClick={attack}>Attack(Enter)</button>\n    <button type=\"submit\" className=\"send btn select\" onClick={cure}>Cure(Ctrl)</button>\n    <button type=\"submit\" className=\"send btn select\" onClick={menu}>Back(Esc)</button>\n  </Fragment>\n  );\n};\n\nButtons.propTypes = {\n  attack: PropTypes.func.isRequired,\n  cure: PropTypes.func.isRequired,\n  menu: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport mapDispatchToProps from '../mapDispatchToProps/mapDispatchToProps';\nimport randomMathTask from './randomMathTask';\nimport Buttons from '../buttons';\nimport './mathematics.css';\n\nclass Mathematics extends Component {\n  state = {\n    firstNumber: null,\n    secondNumber: null,\n    result: null,\n    value: '',\n  }\n\n  textInput = React.createRef();\n\n  componentDidMount() {\n    this.setState(prevState => (\n      Object.assign(prevState, randomMathTask())\n    ));\n    this.textInput.current.focus();\n  }\n\n  heroCure = () => {\n    const {\n      setCureHero,\n      setCureMonster,\n      setNothingPage,\n    } = this.props;\n    const { value, result } = this.state;\n    if (parseInt(value, 10) === result) setCureHero();\n    else setCureMonster();\n    setNothingPage();\n  }\n\n  heroAttack = () => {\n    const {\n      setHeroAttack,\n      setMonsterAttack,\n      setNothingPage,\n    } = this.props;\n    const { value, result } = this.state;\n    if (parseInt(value, 10) === result) {\n      setHeroAttack();\n    } else {\n      setMonsterAttack();\n    }\n    setNothingPage();\n  }\n\n  handleMenu = (event) => {\n    const { setMenuPage } = this.props;\n    event.preventDefault();\n    setMenuPage();\n  };\n\n  handleHeroAttack = (event) => {\n    event.preventDefault();\n    this.heroAttack();\n  };\n\n  handleHeroCure = (event) => {\n    event.preventDefault();\n    this.heroCure();\n  };\n\n  handleChange = (event) => {\n    const { keyboard, setDefaultKey } = this.props;\n    this.setState({ value: event.target.value });\n    if (keyboard) {\n      this.setState({ value: '' });\n      setDefaultKey();\n    }\n  }\n\n  handleKeyHeroAttack = (event) => {\n    const { setMenuPage } = this.props;\n    if (event.key === 'Enter') {\n      this.heroAttack();\n    }\n\n    if (event.key === 'Escape') {\n      setMenuPage();\n    }\n\n    if (event.ctrlKey) {\n      this.heroCure();\n    }\n  }\n\n  render() {\n    const {\n      firstNumber,\n      secondNumber,\n      mathOperation,\n      value,\n    } = this.state;\n    return (\n      <div className=\"mathMet\">\n        <span className=\"taskHeading\">Solve an example:</span>\n        <span className=\"task\">\n          {firstNumber}\n          &nbsp;\n          {mathOperation}\n          &nbsp;\n          {secondNumber}\n        </span>\n        <span className=\"taskHeading\">Your answer:</span>\n        <input type=\"text\" ref={this.textInput} value={value} onChange={this.handleChange} onKeyDown={this.handleKeyHeroAttack} />\n        <Buttons attack={this.handleHeroAttack} cure={this.handleHeroCure} menu={this.handleMenu} />\n      </div>\n    );\n  }\n}\n\nMathematics.propTypes = {\n  setMenuPage: PropTypes.func.isRequired,\n  setDefaultKey: PropTypes.func.isRequired,\n  setMonsterAttack: PropTypes.func.isRequired,\n  setNothingPage: PropTypes.func.isRequired,\n  setHeroAttack: PropTypes.func.isRequired,\n  setCureHero: PropTypes.func.isRequired,\n  setCureMonster: PropTypes.func.isRequired,\n  keyboard: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = store => ({ keyboard: store.keyboard.mathKey });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Mathematics);\n","import Mathematics from './mathematics';\n\nexport default Mathematics;\n","import blink from './blink.wav';\nimport bound from './bound.wav';\nimport dangle from './dangle.wav';\nimport endure from './endure.wav';\nimport fabulous from './fabulous.wav';\nimport faucet from './faucet.wav';\nimport glisten from './glisten.wav';\nimport jolt from './jolt.wav';\nimport marble from './marble.wav';\nimport smear from './smear.wav';\nimport vicious from './vicious.wav';\nimport incisive from './incisive.wav';\nimport recluse from './recluse.wav';\nimport diminish from './diminish.wav';\nimport motto from './motto.wav';\nimport residue from './residue.wav';\nimport nausea from './nausea.wav';\nimport obnoxious from './obnoxious.wav';\nimport scatter from './scatter.wav';\nimport snarl from './snarl.wav';\nimport carve from './carve.wav';\nimport tremble from './tremble.wav';\nimport intersection from './intersection.wav';\nimport inept from './inept.wav';\nimport pervert from './pervert.wav';\nimport nasty from './nasty.wav';\nimport mock from './mock.wav';\nimport sag from './sag.wav';\nimport thaw from './thaw.wav';\n\nconst audioObject = {\n  blink,\n  bound,\n  dangle,\n  endure,\n  fabulous,\n  faucet,\n  glisten,\n  jolt,\n  marble,\n  smear,\n  vicious,\n  incisive,\n  recluse,\n  diminish,\n  motto,\n  residue,\n  nausea,\n  obnoxious,\n  scatter,\n  snarl,\n  carve,\n  tremble,\n  intersection,\n  inept,\n  pervert,\n  nasty,\n  mock,\n  sag,\n  thaw,\n};\n\nexport default audioObject;\n","function audioGuess(obj) {\n  const keys = Object.keys(obj);\n  return keys[Math.floor(keys.length * Math.random())];\n}\n\nexport default audioGuess;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ReactAudioPlayer from 'react-audio-player';\nimport PropTypes from 'prop-types';\nimport mapDispatchToProps from '../mapDispatchToProps/mapDispatchToProps';\nimport { audioObject, audioGuess } from './pronunciation';\nimport Buttons from '../buttons';\nimport './audio.css';\n\nclass Audio extends Component {\n  state = {\n    value: '',\n    randomKey: '',\n  }\n\n  audio = React.createRef();\n\n  textInput = React.createRef();\n\n  componentDidMount() {\n    this.setState({ randomKey: audioGuess(audioObject) });\n    this.textInput.current.focus();\n  }\n\n  handleMenu = (event) => {\n    const { setMenuPage } = this.props;\n    event.preventDefault();\n    setMenuPage();\n  };\n\n  heroCure = () => {\n    const {\n      setCureHero,\n      setCureMonster,\n      setNothingPage,\n    } = this.props;\n    const { value, randomKey } = this.state;\n    if (value === randomKey) setCureHero();\n    else setCureMonster();\n    setNothingPage();\n  }\n\n  heroAttack = () => {\n    const {\n      setHeroAttack,\n      setMonsterAttack,\n      setNothingPage,\n    } = this.props;\n    const { value, randomKey } = this.state;\n    if (value === randomKey) {\n      setHeroAttack();\n    } else {\n      setMonsterAttack();\n    }\n    setNothingPage();\n  }\n\n  handleHeroAttack = (event) => {\n    event.preventDefault();\n    this.heroAttack();\n  };\n\n  handleHeroCure = (event) => {\n    event.preventDefault();\n    this.heroCure();\n  };\n\n  handleChange = (event) => {\n    const { keyboard, setDefaultKey } = this.props;\n    this.setState({ value: event.target.value });\n    if (keyboard) {\n      this.setState({ value: '' });\n      setDefaultKey();\n    }\n  }\n\n  handleKeyHeroAttack = (event) => {\n    const { setMenuPage } = this.props;\n\n    if (event.key === 'Enter') {\n      this.heroAttack();\n    }\n\n    if (event.key === 'Escape') {\n      setMenuPage();\n    }\n\n    if (event.ctrlKey) {\n      this.heroCure();\n    }\n\n    if (event.key === 'Shift') {\n      this.audio.current.audioEl.play();\n    }\n  }\n\n  render() {\n    const { value, randomKey } = this.state;\n    return (\n      <div className=\"audioMet\">\n        <span className=\"taskHeading\">Enter the word that you heard(Use Shift to listen word):</span>\n        <span className=\"task\">\n          <ReactAudioPlayer\n            ref={this.audio}\n            src={audioObject[randomKey]}\n            controls\n          />\n        </span>\n        <span className=\"taskHeading\">Your answer:</span>\n        <input type=\"text\" ref={this.textInput} value={value} onChange={this.handleChange} onKeyDown={this.handleKeyHeroAttack} />\n        <Buttons attack={this.handleHeroAttack} cure={this.handleHeroCure} menu={this.handleMenu} />\n      </div>\n    );\n  }\n}\n\nAudio.propTypes = {\n  setMenuPage: PropTypes.func.isRequired,\n  setDefaultKey: PropTypes.func.isRequired,\n  setMonsterAttack: PropTypes.func.isRequired,\n  setNothingPage: PropTypes.func.isRequired,\n  setHeroAttack: PropTypes.func.isRequired,\n  setCureHero: PropTypes.func.isRequired,\n  setCureMonster: PropTypes.func.isRequired,\n  keyboard: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = store => ({ keyboard: store.keyboard.audioKey });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Audio);\n","import Audio from './audio';\n\nexport default Audio;\n","const translationObject = {\n  blink: ['моргать', 'мигать'],\n  bound: ['непременный', 'обязательный', 'обязанный', 'направляющийся'],\n  dangle: ['свисать', 'манить', 'соблазнять'],\n  endure: ['выносить', 'выдерживать'],\n  fabulous: ['невероятный', 'потрясающий'],\n  faucet: ['кран'],\n  glisten: ['блестеть'],\n  jolt: ['толчок', 'потрясение'],\n  marble: ['мрамор'],\n  smear: ['мазать', 'размазывать', 'порочить', 'пятнать'],\n  vicious: ['жестокий', 'злой', 'злонамерный'],\n  incisive: ['проницательный', 'острый'],\n  recluse: ['затворник'],\n  diminish: ['уменьшать', 'уменьшаться', 'ослабевать'],\n  motto: ['девиз'],\n  residue: ['остаток', 'осадок'],\n  nausea: ['тошнота'],\n  obnoxious: ['оскорбительный', 'мерзкий'],\n  scatter: ['разбрасывать'],\n  snarl: ['рычать', 'огрызаться'],\n  carve: ['вырезать', 'резать'],\n  tremble: ['дрожать', 'трястись'],\n  intersection: ['перекресток'],\n  inept: ['неумелый', 'неспособный'],\n  pervert: ['извращенец'],\n  nasty: ['ужасный', 'противный', 'злобный', 'гадкий', 'угрожающий', 'опасный'],\n  mock: ['осмеивать', 'насмехаться'],\n  sag: ['прогибаться', 'провисать', 'ослабевать'],\n  thaw: ['таять', 'размораживать', 'теплеть'],\n};\n\nexport default translationObject;\n","function translationGuess(obj) {\n  const keys = Object.keys(obj);\n  return keys[Math.floor(keys.length * Math.random())];\n}\n\nexport default translationGuess;\n","import React, { Fragment, Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport mapDispatchToProps from '../mapDispatchToProps/mapDispatchToProps';\nimport { translationObject, translationGuess } from './vocabulary';\nimport Buttons from '../buttons';\nimport './translation.css';\n\nclass Translation extends Component {\n  state = {\n    value: '',\n    randomKey: '',\n  };\n\n  textInput = React.createRef();\n\n  componentDidMount() {\n    this.setState({ randomKey: translationGuess(translationObject) });\n    this.textInput.current.focus();\n  }\n\n  handleMenu = (event) => {\n    const { setMenuPage } = this.props;\n    event.preventDefault();\n    setMenuPage();\n  };\n\n  heroCure = () => {\n    const {\n      setCureHero,\n      setCureMonster,\n      setNothingPage,\n    } = this.props;\n    const {\n      value,\n      randomKey,\n    } = this.state;\n    if (translationObject[randomKey].includes(value)) setCureHero();\n    else setCureMonster();\n    setNothingPage();\n  }\n\n  heroAttack = () => {\n    const {\n      setHeroAttack,\n      setMonsterAttack,\n      setNothingPage,\n    } = this.props;\n    const {\n      value,\n      randomKey,\n    } = this.state;\n    if (translationObject[randomKey].includes(value)) {\n      setHeroAttack();\n    } else {\n      setMonsterAttack();\n    }\n    setNothingPage();\n  }\n\n  handleHeroAttack = (event) => {\n    event.preventDefault();\n    this.heroAttack();\n  };\n\n  handleHeroCure = (event) => {\n    event.preventDefault();\n    this.heroCure();\n  };\n\n  handleChange = (event) => {\n    const { keyboard, setDefaultKey } = this.props;\n    this.setState({ value: event.target.value });\n    if (keyboard) {\n      this.setState({ value: '' });\n      setDefaultKey();\n    }\n  }\n\n  handleKeyHeroAttack = (event) => {\n    const { setMenuPage } = this.props;\n\n    if (event.key === 'Enter') {\n      this.heroAttack();\n    }\n\n    if (event.key === 'Escape') {\n      setMenuPage();\n    }\n\n    if (event.ctrlKey) {\n      this.heroCure();\n    }\n  }\n\n  render() {\n    const { randomKey, value } = this.state;\n    return (\n      <Fragment>\n        <div className=\"translationMet\">\n          <span className=\"taskHeading\">{randomKey}</span>\n          <span className=\"taskHeading\">Your answer:</span>\n          <input type=\"text\" id=\"userAudioInput\" ref={this.textInput} value={value} onChange={this.handleChange} onKeyDown={this.handleKeyHeroAttack} />\n          <Buttons attack={this.handleHeroAttack} cure={this.handleHeroCure} menu={this.handleMenu} />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nTranslation.propTypes = {\n  setMenuPage: PropTypes.func.isRequired,\n  setDefaultKey: PropTypes.func.isRequired,\n  setMonsterAttack: PropTypes.func.isRequired,\n  setNothingPage: PropTypes.func.isRequired,\n  setHeroAttack: PropTypes.func.isRequired,\n  setCureHero: PropTypes.func.isRequired,\n  setCureMonster: PropTypes.func.isRequired,\n  keyboard: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = store => ({ keyboard: store.keyboard.translationKey });\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Translation);\n","import Translation from './translation';\n\nexport default Translation;\n","const link = 'https://simplegameforfun.herokuapp.com/record/';\n\nexport default link;\n","import link from './link';\n\nconst retrieveRecordTable = () => (\n  new Promise((resolve, reject) => {\n    fetch(link)\n      .then(response => response.json())\n      .then(response => resolve(response.record))\n      .catch(err => reject(err));\n  }));\n\nexport default retrieveRecordTable;\n","function sortFunction(a, b) {\n  return (b.round - a.round);\n}\n\nconst topTen = array => (\n  new Promise((resolve) => {\n    const arrayA = [...array];\n    resolve(arrayA\n      .sort(sortFunction)\n      .slice(0, 20));\n  }));\n\nexport default topTen;\n","import link from './link';\n\nconst addRowInTable = (login, round) => (\n  new Promise((resolve, reject) => {\n    fetch(link, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        login: `${login}`,\n        round: `${round}`,\n      }),\n    })\n      .then(data => resolve(data))\n      .catch(err => reject(err));\n  }));\n\nexport default addRowInTable;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport retrieveRecordTable from '../../retrieve/retrieve';\nimport topTen from '../../retrieve/topTen';\nimport addRowInTable from '../../retrieve/addRowInTable';\nimport './tablerecord.css';\n\nclass TableRecord extends Component {\n  state = {\n    record: [],\n  }\n\n  componentDidMount() {\n    const { login, kill } = this.props;\n    addRowInTable(login, kill)\n      .then(() => retrieveRecordTable())\n      .then(data => topTen(data))\n      .then(data => this.setState({ record: data }))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    const { record } = this.state;\n    const recordTable = record.map(item => (\n      <tr key={item.id}>\n        <td>{item.login}</td>\n        <td>{item.round}</td>\n      </tr>\n    ));\n    return (\n      <div className=\"tablerecord\">\n        <table className=\"record\">\n          <thead>\n            <tr>\n              <th>Login</th>\n              <th>Top 20 results</th>\n            </tr>\n          </thead>\n          <tbody>\n            {recordTable}\n          </tbody>\n        </table>\n        <button className=\"btn select newgame\" type=\"button\" onClick={() => window.location.reload()}>New Game(F5)</button>\n      </div>\n    );\n  }\n}\n\nTableRecord.propTypes = {\n  login: PropTypes.string.isRequired,\n  kill: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = store => ({\n  login: store.user.login,\n  kill: store.kill.kill,\n});\n\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(TableRecord);\n","import RecordTable from './tablerecord';\n\nexport default RecordTable;\n","import Congratilation from './congratilation';\n\nexport default Congratilation;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport PropTypes from 'prop-types';\nimport changeMonsterHealth from '../../actions/changeMonsterHealth';\nimport fightDefault from '../../actions/fightDefault';\nimport menuPage from '../../actions/menuPage';\nimport './congratilation.css';\n\nconst Congratilation = (props) => {\n  const {\n    setMonsterHealth,\n    setFigthDefault,\n    setMenuPage,\n  } = props;\n\n  const handleNewMonster = (event) => {\n    event.preventDefault();\n    setMonsterHealth(100);\n    setMenuPage();\n    setFigthDefault();\n  };\n\n  const keyHandle = (event) => {\n    if (event.key === 'Enter') {\n      setMonsterHealth(100);\n      setMenuPage();\n      setFigthDefault();\n    }\n  };\n\n  return (\n    <div className=\"congratWindow\">\n      <span className=\"congratilation\">Congratilation! You win!</span>\n      <button className=\"btn select\" type=\"button\" onClick={handleNewMonster}>Next</button>\n      <KeyboardEventHandler\n        handleKeys={['Enter']}\n        onKeyEvent={(key, e) => keyHandle(e)}\n      />\n    </div>\n  );\n};\n\nCongratilation.propTypes = {\n  setMonsterHealth: PropTypes.func.isRequired,\n  setFigthDefault: PropTypes.func.isRequired,\n  setMenuPage: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setMonsterHealth: health => dispatch(changeMonsterHealth(health)),\n  setFigthDefault: () => dispatch(fightDefault()),\n  setMenuPage: () => dispatch(menuPage()),\n});\n\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(Congratilation);\n","import ModalWindow from './modalWindow';\n\nexport default ModalWindow;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Menu from '../menu';\nimport Mathematics from '../mathematics';\nimport Audio from '../audio';\nimport Translation from '../translation';\nimport TableRecord from '../tableRecord';\nimport Congratilation from '../congratilation';\n\nconst ModalWindow = (props) => {\n  const {\n    math,\n    menu,\n    audio,\n    translation,\n    record,\n    congratilation,\n  } = props;\n  return (\n    <div className=\"menuTask\">\n      { menu && <Menu /> }\n      { math && <Mathematics /> }\n      { audio && <Audio /> }\n      { translation && <Translation /> }\n      { record && <TableRecord />}\n      { congratilation && <Congratilation />}\n    </div>\n  );\n};\n\nModalWindow.propTypes = {\n  math: PropTypes.bool.isRequired,\n  menu: PropTypes.bool.isRequired,\n  audio: PropTypes.bool.isRequired,\n  translation: PropTypes.bool.isRequired,\n  record: PropTypes.bool.isRequired,\n  congratilation: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = store => ({\n  math: store.layout.math,\n  menu: store.layout.menu,\n  audio: store.layout.audio,\n  translation: store.layout.translation,\n  record: store.layout.record,\n  congratilation: store.layout.congratilation,\n});\n\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(ModalWindow);\n","import React from 'react';\nimport Hero from '../hero';\nimport Monster from '../monster';\nimport HealthCommon from '../health/healthCommon';\nimport ModalWindow from '../modalWindow';\nimport './gameLayout.css';\n\nconst GameLayout = () => (\n  <div className=\"layout\">\n    <HealthCommon />\n    <ModalWindow />\n    <div className=\"fightArea\">\n      <Hero />\n      <Monster />\n    </div>\n  </div>\n);\n\nexport default GameLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Login from './components/loginPage/login';\nimport GameLayout from './components/gameLayout/gameLayout';\nimport './App.css';\n\nconst App = (props) => {\n  const { login } = props;\n  return (\n    <div className=\"App\">\n      { !login && <Login /> }\n      { login && <GameLayout /> }\n    </div>\n  );\n};\n\nApp.propTypes = {\n  login: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = store => ({ login: store.user.login });\n\nexport default connect(\n  mapStateToProps,\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}