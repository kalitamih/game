{"version":3,"sources":["components/animation/hero/heroAttack/heroAttackImage-min.png","components/animation/hero/heroHurt/heroHurt-min.png","components/animation/hero/heroHurt/hurt.mp3","components/animation/hero/heroIdle/heroIdleImage-min.png","components/animation/hero/heroDeath/heroDeath-min.png","components/animation/explosition/explosition.png","components/animation/cure/cure.mp3","components/animation/cure/cure.png","components/animation/monster/monsterAttack/attack.mp3","components/animation/monster/monsterAttack/monsterAttack.png","components/animation/monster/monsterIdle/monsterIdle.png","components/animation/monster/monsterHurt/hurt.mp3","components/animation/monster/monsterHurt/monsterHurt.png","components/animation/monster/monsterDeath/monsterDeath.png","components/audio/pronunciation/blink.wav","components/audio/pronunciation/bound.wav","components/audio/pronunciation/dangle.wav","components/audio/pronunciation/endure.wav","components/audio/pronunciation/fabulous.wav","components/audio/pronunciation/faucet.wav","components/audio/pronunciation/glisten.wav","components/audio/pronunciation/jolt.wav","components/audio/pronunciation/marble.wav","components/audio/pronunciation/smear.wav","components/audio/pronunciation/vicious.wav","components/audio/pronunciation/incisive.wav","components/audio/pronunciation/recluse.wav","components/audio/pronunciation/diminish.wav","components/audio/pronunciation/motto.wav","components/audio/pronunciation/residue.wav","components/audio/pronunciation/nausea.wav","components/audio/pronunciation/obnoxious.wav","components/audio/pronunciation/scatter.wav","components/audio/pronunciation/snarl.wav","components/audio/pronunciation/carve.wav","components/audio/pronunciation/tremble.wav","components/audio/pronunciation/intersection.wav","components/audio/pronunciation/inept.wav","components/audio/pronunciation/pervert.wav","components/audio/pronunciation/nasty.wav","components/audio/pronunciation/mock.wav","components/audio/pronunciation/sag.wav","components/audio/pronunciation/thaw.wav","components/audio/pronunciation/throb.wav","components/audio/pronunciation/caress.wav","reducers/health.js","reducers/user.js","reducers/layout.js","reducers/figth.js","reducers/kill.js","reducers/cure.js","reducers/keyboard.js","reducers/records.js","reducers/index.js","store/configureStore.js","components/loginPage/login.js","actions/login.js","components/animation/hero/heroAttack/index.js","components/animation/hero/heroAttack/heroAttack.js","actions/hurtMonster.js","actions/changeHeroHealth.js","components/animation/hero/heroHurt/index.js","components/animation/hero/heroHurt/heroHurt.js","actions/fightDefault.js","actions/heroDeath.js","actions/menuPage.js","components/animation/hero/heroIdle/index.js","components/animation/hero/heroIdle/heroIdle.js","components/animation/hero/heroDeath/index.js","components/animation/hero/heroDeath/heroDeath.js","actions/recordPage.js","components/animation/explosition/index.js","components/animation/explosition/explosition.js","actions/changeMonsterHealth.js","components/animation/cure/cure.js","components/animation/cure/index.js","actions/defaultCure.js","components/hero/index.js","components/hero/hero.js","components/animation/monster/monsterAttack/index.js","components/animation/monster/monsterAttack/monsterAttack.js","actions/hurtHero.js","components/animation/monster/monsterIdle/index.js","components/animation/monster/monsterIdle/monsterIdle.js","components/animation/monster/monsterHurt/index.js","components/animation/monster/monsterHurt/monsterHurt.js","actions/monsterDeath.js","components/animation/monster/monsterDeath/index.js","components/animation/monster/monsterDeath/monsterDeath.js","actions/kill.js","actions/congratilation.js","components/monster/index.js","components/monster/monster.js","components/health/healthHero/index.js","components/health/healthHero/healthHero.js","components/health/healthMonster/index.js","components/health/healthMonster/healthMonster.js","components/health/healthCommon/index.js","components/health/healthCommon/health.js","components/menu/index.js","components/menu/menu.js","actions/mathPage.js","actions/audioPage.js","actions/translationPage.js","actions/mathKey.js","actions/audioKey.js","actions/translationKey.js","components/mapDispatchToProps/mapDispatchToProps.js","actions/cureHero.js","actions/cureMonster.js","actions/heroAttack.js","actions/monsterAttack.js","actions/nothingPage.js","actions/defaultKey.js","components/mathematics/randomMathTask.js","components/buttons/index.js","components/buttons/buttons.js","components/mathematics/mathematics.js","components/mathematics/index.js","components/audio/pronunciation/array.js","components/audio/pronunciation/audioGuess.js","components/audio/audio.js","components/audio/index.js","components/translation/vocabulary/translationObject.js","components/translation/vocabulary/randomTranslationTask.js","components/translation/translation.js","components/translation/index.js","retrieve/link.js","retrieve/retrieve.js","retrieve/topTen.js","actions/getTableRecord.js","retrieve/addRowInTable.js","components/loader/index.js","components/loader/loader.js","components/tableRecord/tablerecord.js","components/tableRecord/index.js","components/congratilation/index.js","components/congratilation/congratilation.js","components/modalWindow/index.js","components/modalWindow/modalWindow.js","components/gameLayout/gameLayout.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","monster","hero","login","menu","math","audio","translation","record","congratilation","heroIdle","monsterIdle","heroAttack","monsterAttack","heroHurt","monsterHurt","heroDeath","monsterDeath","kill","cureHero","cureMonster","audioKey","mathKey","translationKey","data","loading","error","rootReducer","combineReducers","health","state","arguments","length","undefined","action","type","Object","objectSpread","payload","user","layout","falseObject","figth","falseState","cure","keyboard","records","store","createStore","applyMiddleware","thunk","Login","value","textInput","React","createRef","handleChange","event","_this","setState","target","handleSubmit","setUserLogin","props","preventDefault","this","current","focus","react_default","a","createElement","onSubmit","className","ref","onChange","placeholder","Component","connect","dispatch","setLogin","HeroAttack","setMonsterHurt","build_default","image","heroAttackImage","widthFrame","heightFrame","steps","fps","onPause","changeHeroHealth","HeroHurt","setFightDefault","setHeroDeath","setHeroHealth","setMenuPage","react","HeroHurtImage","lib_default","url","HurtHeroSound","playStatus","Sound","status","PLAYING","HeroIdle","heroIdleImage","loop","console","log","HeroDeath","setRecordPage","HeroDeathImage","Explosition","cureImage","changeMonsterHealth","Cure","_this$props","setCureDefault","setMonsterHealth","cureSound","onLoading","handleSongLoading","onPlaying","handleSongPlaying","onFinishedPlaying","handleSongFinishedPlaying","Hero","hero_heroIdle","hero_heroAttack","hero_heroHurt","hero_heroDeath","animation_explosition","animation_cure","MonsterAttack","setHeroHurt","monsterAttackImage","MonsterAttackSound","MonsterIdle","MonsterIdleImage","MonsterHurt","setFigthDefault","setMonsterDeath","HurtMonsterImage","HurtMonsterSound","MonsterDeath","setKillMonster","setCongratilationPage","Monster","monster_monsterIdle","monster_monsterAttack","monster_monsterHurt","monster_monsterDeath","HeroHealth","divStyle","border","background","width","concat","height","text","style","healthMonster","Health","health_healthHero","health_healthMonster","Menu","setMathPage","setAudioPage","setTranslatePage","setMathKey","setAudioKey","setTranslationKey","onClick","react_keyboard_event_handler_default","handleKeys","onKeyEvent","key","e","mapDispatchToProps","setCureHero","setCureMonster","setHeroAttack","setMonsterAttack","setHurtHero","setNothingPage","setDefaultKey","randomMathTask","firstNumber","Math","floor","random","secondNumber","mathOperation","result","Buttons","attack","Mathematics","heroCure","_this$state","parseInt","_this$props2","_this$state2","handleMenu","handleHeroAttack","handleHeroCure","_this$props3","handleKeyHeroAttack","ctrlKey","prevState","assign","_this$state3","onKeyDown","components_buttons","audioObject","blink","bound","dangle","endure","fabulous","faucet","glisten","jolt","marble","smear","vicious","incisive","recluse","diminish","motto","residue","nausea","obnoxious","scatter","snarl","carve","tremble","intersection","inept","pervert","nasty","mock","sag","thaw","throb","caress","audioGuess","obj","keys","Audio","randomKey","audioEl","play","bundle_default","src","controls","translationObject","translationGuess","Translation","includes","id","link","retrieveRecordTable","Promise","resolve","reject","fetch","then","response","json","catch","err","sortFunction","b","round","topTen","array","toConsumableArray","sort","slice","tableRecord","addRowInTable","method","headers","Content-Type","body","JSON","stringify","Loader","TableRecord","getTableRecord","components_loader","color","map","item","window","location","reload","RecordTable","Congratilation","ModalWindow","components_menu","components_mathematics","components_audio","components_translation","components_tableRecord","components_congratilation","GameLayout","healthCommon","components_modalWindow","components_hero","components_monster","components_loginPage_login","gameLayout_gameLayout","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"0FAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC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","file":"static/js/main.c31ab780.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heroAttackImage-min.fde5ac2b.png\";","module.exports = __webpack_public_path__ + \"static/media/heroHurt-min.06850c83.png\";","module.exports = __webpack_public_path__ + \"static/media/hurt.9015ff68.mp3\";","module.exports = __webpack_public_path__ + \"static/media/heroIdleImage-min.a8f8dc40.png\";","module.exports = __webpack_public_path__ + \"static/media/heroDeath-min.636291e9.png\";","module.exports = __webpack_public_path__ + \"static/media/explosition.8ea28506.png\";","module.exports = __webpack_public_path__ + \"static/media/cure.1164e2cf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cure.03eb91d2.png\";","module.exports = __webpack_public_path__ + \"static/media/attack.9d70044a.mp3\";","module.exports = __webpack_public_path__ + \"static/media/monsterAttack.ab1ba11a.png\";","module.exports = __webpack_public_path__ + \"static/media/monsterIdle.b4210d21.png\";","module.exports = __webpack_public_path__ + \"static/media/hurt.dc80fc88.mp3\";","module.exports = __webpack_public_path__ + \"static/media/monsterHurt.77f1d669.png\";","module.exports = __webpack_public_path__ + \"static/media/monsterDeath.69babb90.png\";","module.exports = __webpack_public_path__ + \"static/media/blink.702f06cf.wav\";","module.exports = __webpack_public_path__ + \"static/media/bound.7a054740.wav\";","module.exports = __webpack_public_path__ + \"static/media/dangle.0ee03510.wav\";","module.exports = __webpack_public_path__ + \"static/media/endure.a5d4c124.wav\";","module.exports = __webpack_public_path__ + \"static/media/fabulous.ca067983.wav\";","module.exports = __webpack_public_path__ + \"static/media/faucet.5a406e67.wav\";","module.exports = __webpack_public_path__ + \"static/media/glisten.81893af0.wav\";","module.exports = __webpack_public_path__ + \"static/media/jolt.00127664.wav\";","module.exports = __webpack_public_path__ + \"static/media/marble.cef458a1.wav\";","module.exports = __webpack_public_path__ + \"static/media/smear.6cc92dad.wav\";","module.exports = __webpack_public_path__ + \"static/media/vicious.7de07caf.wav\";","module.exports = __webpack_public_path__ + \"static/media/incisive.cc11cc4a.wav\";","module.exports = __webpack_public_path__ + \"static/media/recluse.6e1a9298.wav\";","module.exports = __webpack_public_path__ + \"static/media/diminish.25a38b3d.wav\";","module.exports = __webpack_public_path__ + \"static/media/motto.ffaf78eb.wav\";","module.exports = __webpack_public_path__ + \"static/media/residue.16bd8a8b.wav\";","module.exports = __webpack_public_path__ + \"static/media/nausea.63cd2aa2.wav\";","module.exports = __webpack_public_path__ + \"static/media/obnoxious.75b93b0d.wav\";","module.exports = __webpack_public_path__ + \"static/media/scatter.59d5b6f4.wav\";","module.exports = __webpack_public_path__ + \"static/media/snarl.434615c2.wav\";","module.exports = __webpack_public_path__ + \"static/media/carve.0985a6c4.wav\";","module.exports = __webpack_public_path__ + \"static/media/tremble.d4989654.wav\";","module.exports = __webpack_public_path__ + \"static/media/intersection.ff16e99c.wav\";","module.exports = __webpack_public_path__ + \"static/media/inept.7f9c92fc.wav\";","module.exports = __webpack_public_path__ + \"static/media/pervert.5c3172d6.wav\";","module.exports = __webpack_public_path__ + \"static/media/nasty.e2b3f22e.wav\";","module.exports = __webpack_public_path__ + \"static/media/mock.1cfd1b8b.wav\";","module.exports = __webpack_public_path__ + \"static/media/sag.9f94158d.wav\";","module.exports = __webpack_public_path__ + \"static/media/thaw.c93c2c8a.wav\";","module.exports = __webpack_public_path__ + \"static/media/throb.88d007d2.wav\";","module.exports = __webpack_public_path__ + \"static/media/caress.0d03663b.wav\";","const initialState = {\r\n  monster: 100,\r\n  hero: 100,\r\n};\r\n\r\nexport default function healthReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_HERO_HEALTH':\r\n      return {\r\n        ...state,\r\n        hero: state.hero + action.payload,\r\n      };\r\n\r\n    case 'SET_MONSTER_HEALTH':\r\n      return {\r\n        ...state,\r\n        monster: state.monster + action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  login: '',\r\n};\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_LOGIN':\r\n      return {\r\n        ...state,\r\n        login: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  menu: true,\r\n  math: false,\r\n  audio: false,\r\n  translation: false,\r\n  record: false,\r\n  congratilation: false,\r\n};\r\n\r\nexport default function layoutReducer(state = initialState, action) {\r\n  const falseObject = {\r\n    menu: false,\r\n    math: false,\r\n    audio: false,\r\n    translation: false,\r\n    record: false,\r\n    congratilation: false,\r\n  };\r\n\r\n  switch (action.type) {\r\n    case 'SET_MATH_PAGE':\r\n      return {\r\n        ...state,\r\n        ...falseObject,\r\n        math: true,\r\n      };\r\n\r\n    case 'SET_MENU_PAGE':\r\n      return {\r\n        ...state,\r\n        ...falseObject,\r\n        menu: true,\r\n      };\r\n\r\n    case 'SET_AUDIO_PAGE':\r\n      return {\r\n        ...state,\r\n        ...falseObject,\r\n        audio: true,\r\n      };\r\n\r\n    case 'SET_TRANSLATION_PAGE':\r\n      return {\r\n        ...state,\r\n        ...falseObject,\r\n        translation: true,\r\n      };\r\n\r\n    case 'SET_RECORD_PAGE':\r\n      return {\r\n        ...state,\r\n        ...falseObject,\r\n        record: true,\r\n      };\r\n    case 'SET_CONGRATILATION_PAGE':\r\n      return {\r\n        ...state,\r\n        ...falseObject,\r\n        congratilation: true,\r\n      };\r\n\r\n    case 'SET_NOTHING_PAGE':\r\n      return {\r\n        ...state,\r\n        ...falseObject,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  heroIdle: true,\r\n  monsterIdle: true,\r\n  heroAttack: false,\r\n  monsterAttack: false,\r\n  heroHurt: false,\r\n  monsterHurt: false,\r\n  heroDeath: false,\r\n  monsterDeath: false,\r\n};\r\n\r\nexport default function figthReducer(state = initialState, action) {\r\n  const falseState = {\r\n    heroIdle: false,\r\n    monsterIdle: false,\r\n    heroAttack: false,\r\n    monsterAttack: false,\r\n    heroHurt: false,\r\n    monsterHurt: false,\r\n    heroDeath: false,\r\n    monsterDeath: false,\r\n  };\r\n\r\n  switch (action.type) {\r\n    case 'SET_FIGHT_DEFAULT':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroIdle: true,\r\n        monsterIdle: true,\r\n      };\r\n\r\n    case 'SET_ATTACK_HERO':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        monsterIdle: true,\r\n        heroAttack: true,\r\n      };\r\n\r\n    case 'SET_ATTACK_MONSTER':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroIdle: true,\r\n        monsterAttack: true,\r\n      };\r\n\r\n    case 'SET_HURT_HERO':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroHurt: true,\r\n        monsterIdle: true,\r\n      };\r\n\r\n    case 'SET_HURT_MONSTER':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroIdle: true,\r\n        monsterHurt: true,\r\n      };\r\n\r\n    case 'SET_HERO_DEATH':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroDeath: true,\r\n        monsterIdle: true,\r\n      };\r\n\r\n    case 'SET_MONSTER_DEATH':\r\n      return {\r\n        ...state,\r\n        ...falseState,\r\n        heroIdle: true,\r\n        monsterDeath: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  kill: 0,\r\n};\r\n\r\nexport default function killReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_KILL_MONSTER':\r\n      return {\r\n        ...state,\r\n        kill: state.kill + 1,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  cureHero: false,\r\n  cureMonster: false,\r\n};\r\n\r\nexport default function cureReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_HERO_CURE':\r\n      return { ...state, cureHero: true };\r\n\r\n    case 'SET_MONSTER_CURE':\r\n      return { ...state, cureMonster: true };\r\n\r\n    case 'SET_DEFAULT_CURE':\r\n      return { ...state, cureHero: false, cureMonster: false };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  audioKey: false,\r\n  mathKey: false,\r\n  translationKey: false,\r\n};\r\n\r\nexport default function keyboardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_AUDIO_KEY':\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        audioKey: true,\r\n      };\r\n\r\n    case 'SET_MATH_KEY':\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        mathKey: true,\r\n      };\r\n\r\n    case 'SET_TRANSLATION_KEY':\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n        translationKey: true,\r\n      };\r\n\r\n    case 'SET_DEFAULT_KEY':\r\n      return {\r\n        ...state,\r\n        ...initialState,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  data: [],\r\n  loading: true,\r\n  error: '',\r\n};\r\n\r\nexport default function recordsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'LOAD_RECORDS_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: '',\r\n      };\r\n\r\n    case 'LOAD_RECORDS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        data: action.data,\r\n        loading: false,\r\n      };\r\n\r\n    case 'LOAD_RECORDS_ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport healthReducer from './health';\r\nimport userReducer from './user';\r\nimport layoutReducer from './layout';\r\nimport figthReducer from './figth';\r\nimport killReducer from './kill';\r\nimport cureReducer from './cure';\r\nimport keyboardReducer from './keyboard';\r\nimport recordsReducer from './records';\r\n\r\nconst rootReducer = combineReducers({\r\n  health: healthReducer,\r\n  user: userReducer,\r\n  layout: layoutReducer,\r\n  figth: figthReducer,\r\n  kill: killReducer,\r\n  cure: cureReducer,\r\n  keyboard: keyboardReducer,\r\n  records: recordsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk),\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport setLogin from '../../actions/login';\r\nimport './login.css';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  textInput = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.textInput.current.focus();\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    const { setUserLogin } = this.props;\r\n    const { value } = this.state;\r\n    event.preventDefault();\r\n    setUserLogin(value);\r\n    this.setState({ value: '' });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" className=\"form-control\" ref={this.textInput} value={value} onChange={this.handleChange} placeholder=\"Enter login\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-danger\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  setUserLogin: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({ setUserLogin: login => dispatch(setLogin(login)) });\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Login);\r\n","export default function setLogin(login) {\r\n  return {\r\n    type: 'SET_LOGIN',\r\n    payload: login,\r\n  };\r\n}\r\n","import HeroAttack from './heroAttack';\r\n\r\nexport default HeroAttack;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport hurtMonster from '../../../../actions/hurtMonster';\r\nimport heroAttackImage from './heroAttackImage-min.png';\r\nimport './heroAttack.css';\r\n\r\nconst HeroAttack = (props) => {\r\n  const { setMonsterHurt } = props;\r\n  const attackClass = 'hero-attack';\r\n  return (\r\n    <Spritesheet\r\n      className={attackClass}\r\n      image={heroAttackImage}\r\n      widthFrame={685}\r\n      heightFrame={410}\r\n      steps={5}\r\n      fps={10}\r\n      onPause={() => {\r\n        setMonsterHurt();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nHeroAttack.propTypes = {\r\n  setMonsterHurt: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({ setMonsterHurt: () => dispatch(hurtMonster()) });\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(HeroAttack);\r\n","export default function hurtMonster() {\r\n  return {\r\n    type: 'SET_HURT_MONSTER',\r\n  };\r\n}\r\n","export default function changeHeroHealth(health) {\r\n  return {\r\n    type: 'SET_HERO_HEALTH',\r\n    payload: health,\r\n  };\r\n}\r\n","import HeroHurt from './heroHurt';\r\n\r\nexport default HeroHurt;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Sound from 'react-sound';\r\nimport HeroHurtImage from './heroHurt-min.png';\r\nimport fightDefault from '../../../../actions/fightDefault';\r\nimport heroDeath from '../../../../actions/heroDeath';\r\nimport changeHeroHealth from '../../../../actions/changeHeroHealth';\r\nimport menuPage from '../../../../actions/menuPage';\r\nimport HurtHeroSound from './hurt.mp3';\r\nimport './heroHurt.css';\r\n\r\nconst HeroHurt = (props) => {\r\n  const {\r\n    setFightDefault,\r\n    setHeroDeath,\r\n    setHeroHealth,\r\n    setMenuPage,\r\n  } = props;\r\n  const { health } = props;\r\n  const hurtClass = 'hero-hurt';\r\n  return (\r\n    <Fragment>\r\n      <Spritesheet\r\n        className={hurtClass}\r\n        image={HeroHurtImage}\r\n        widthFrame={490}\r\n        heightFrame={387}\r\n        steps={5}\r\n        fps={10}\r\n        onPause={() => {\r\n          if (health > 20) {\r\n            setHeroHealth(-20);\r\n            setMenuPage();\r\n            setFightDefault();\r\n          } else {\r\n            setHeroHealth(-20);\r\n            setHeroDeath();\r\n          }\r\n        }}\r\n      />\r\n      <Sound\r\n        url={HurtHeroSound}\r\n        playStatus={Sound.status.PLAYING}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nHeroHurt.propTypes = {\r\n  setFightDefault: PropTypes.func.isRequired,\r\n  setHeroDeath: PropTypes.func.isRequired,\r\n  setHeroHealth: PropTypes.func.isRequired,\r\n  setMenuPage: PropTypes.func.isRequired,\r\n  health: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({ health: store.health.hero });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setFightDefault: () => dispatch(fightDefault()),\r\n  setHeroDeath: () => dispatch(heroDeath()),\r\n  setHeroHealth: health => dispatch(changeHeroHealth(health)),\r\n  setMenuPage: () => dispatch(menuPage()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(HeroHurt);\r\n","export default function fightDefault() {\r\n  return {\r\n    type: 'SET_FIGHT_DEFAULT',\r\n  };\r\n}\r\n","export default function heroDeath() {\r\n  return {\r\n    type: 'SET_HERO_DEATH',\r\n  };\r\n}\r\n","export default function menuPage() {\r\n  return {\r\n    type: 'SET_MENU_PAGE',\r\n  };\r\n}\r\n","import HeroIdle from './heroIdle';\r\n\r\nexport default HeroIdle;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React from 'react';\r\nimport heroIdleImage from './heroIdleImage-min.png';\r\nimport './heroIdle.css';\r\n\r\nconst HeroIdle = () => {\r\n  const idleClass = 'hero-idle';\r\n  return (\r\n    <Spritesheet\r\n      className={idleClass}\r\n      image={heroIdleImage}\r\n      widthFrame={387}\r\n      heightFrame={350}\r\n      steps={5}\r\n      fps={10}\r\n      loop\r\n      onPause={() => {\r\n        console.log('onPause');\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default HeroIdle;\r\n","import HeroDeath from './heroDeath';\r\n\r\nexport default HeroDeath;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport HeroDeathImage from './heroDeath-min.png';\r\nimport recordPage from '../../../../actions/recordPage';\r\nimport './heroDeath.css';\r\n\r\nconst HeroDeath = (props) => {\r\n  const { setRecordPage } = props;\r\n  const deathClass = 'hero-death';\r\n  return (\r\n    <Spritesheet\r\n      className={deathClass}\r\n      image={HeroDeathImage}\r\n      widthFrame={381}\r\n      heightFrame={350}\r\n      steps={5}\r\n      fps={10}\r\n      onPause={() => {\r\n        setRecordPage();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nHeroDeath.propTypes = {\r\n  setRecordPage: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({ setRecordPage: () => dispatch(recordPage()) });\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(HeroDeath);\r\n","export default function recordPage() {\r\n  return {\r\n    type: 'SET_RECORD_PAGE',\r\n  };\r\n}\r\n","import Explosition from './explosition';\r\n\r\nexport default Explosition;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React from 'react';\r\nimport cureImage from './explosition.png';\r\n\r\nconst Explosition = () => (\r\n  <Spritesheet\r\n    image={cureImage}\r\n    widthFrame={192}\r\n    heightFrame={192}\r\n    steps={17}\r\n    fps={10}\r\n  />\r\n);\r\n\r\nexport default Explosition;\r\n","export default function changeMonsterHealth(health) {\r\n  return {\r\n    type: 'SET_MONSTER_HEALTH',\r\n    payload: health,\r\n  };\r\n}\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Sound from 'react-sound';\r\nimport cureDefault from '../../../actions/defaultCure';\r\nimport changeHeroHealth from '../../../actions/changeHeroHealth';\r\nimport changeMonsterHealth from '../../../actions/changeMonsterHealth';\r\nimport menuPage from '../../../actions/menuPage';\r\nimport cureSound from './cure.mp3';\r\nimport cureImage from './cure.png';\r\n\r\nclass Cure extends Component {\r\n  render() {\r\n    const { cure } = this.props;\r\n    const { cureHero, cureMonster } = cure;\r\n    const {\r\n      setCureDefault,\r\n      setHeroHealth,\r\n      setMonsterHealth,\r\n      setMenuPage,\r\n    } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <Spritesheet\r\n          image={cureImage}\r\n          widthFrame={99}\r\n          heightFrame={101}\r\n          steps={10}\r\n          fps={10}\r\n          onPause={() => {\r\n            if (cureHero) setHeroHealth(20);\r\n            if (cureMonster) setMonsterHealth(20);\r\n            setCureDefault();\r\n            setMenuPage();\r\n          }}\r\n        />\r\n        <Sound\r\n          url={cureSound}\r\n          playStatus={Sound.status.PLAYING}\r\n          onLoading={this.handleSongLoading}\r\n          onPlaying={this.handleSongPlaying}\r\n          onFinishedPlaying={this.handleSongFinishedPlaying}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nCure.propTypes = {\r\n  cure: PropTypes.shape({\r\n    cureHero: PropTypes.bool,\r\n    cureMonster: PropTypes.bool,\r\n  }).isRequired,\r\n  setMenuPage: PropTypes.func.isRequired,\r\n  setHeroHealth: PropTypes.func.isRequired,\r\n  setMonsterHealth: PropTypes.func.isRequired,\r\n  setCureDefault: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({ cure: store.cure });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setMenuPage: () => dispatch(menuPage()),\r\n  setHeroHealth: health => dispatch(changeHeroHealth(health)),\r\n  setMonsterHealth: health => dispatch(changeMonsterHealth(health)),\r\n  setCureDefault: () => dispatch(cureDefault()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Cure);\r\n","import Cure from './cure';\r\n\r\nexport default Cure;\r\n","export default function cureDefault() {\r\n  return {\r\n    type: 'SET_DEFAULT_CURE',\r\n  };\r\n}\r\n","import Hero from './hero';\r\n\r\nexport default Hero;\r\n","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport HeroAttack from '../animation/hero/heroAttack';\r\nimport HeroHurt from '../animation/hero/heroHurt';\r\nimport HeroIdle from '../animation/hero/heroIdle';\r\nimport HeroDeath from '../animation/hero/heroDeath';\r\nimport Explosition from '../animation/explosition';\r\nimport Cure from '../animation/cure';\r\nimport './hero.css';\r\n\r\nconst Hero = (props) => {\r\n  const {\r\n    heroIdle,\r\n    heroHurt,\r\n    heroAttack,\r\n    heroDeath,\r\n  } = props;\r\n  const { cureHero } = props;\r\n  return (\r\n    <Fragment>\r\n      { heroIdle && <HeroIdle /> }\r\n      { heroAttack && <HeroAttack /> }\r\n      { heroHurt && <HeroHurt /> }\r\n      { heroDeath && <HeroDeath /> }\r\n      <div className=\"heroExplosition\">\r\n        { heroHurt && <Explosition /> }\r\n        { cureHero && <Cure /> }\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nHero.propTypes = {\r\n  heroIdle: PropTypes.bool.isRequired,\r\n  heroHurt: PropTypes.bool.isRequired,\r\n  heroAttack: PropTypes.bool.isRequired,\r\n  heroDeath: PropTypes.bool.isRequired,\r\n  cureHero: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  heroIdle: store.figth.heroIdle,\r\n  heroHurt: store.figth.heroHurt,\r\n  heroAttack: store.figth.heroAttack,\r\n  heroDeath: store.figth.heroDeath,\r\n  cureHero: store.cure.cureHero,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null,\r\n)(Hero);\r\n","import MonsterAttack from './monsterAttack';\r\n\r\nexport default MonsterAttack;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Sound from 'react-sound';\r\nimport hurtHero from '../../../../actions/hurtHero';\r\nimport MonsterAttackSound from './attack.mp3';\r\nimport './monsterAttack.css';\r\nimport monsterAttackImage from './monsterAttack.png';\r\n\r\nconst MonsterAttack = (props) => {\r\n  const { setHeroHurt } = props;\r\n  const classAttack = 'monsterAttack';\r\n  return (\r\n    <Fragment>\r\n      <Spritesheet\r\n        className={classAttack}\r\n        image={monsterAttackImage}\r\n        widthFrame={799}\r\n        heightFrame={660}\r\n        steps={10}\r\n        fps={10}\r\n        onPause={() => {\r\n          setHeroHurt();\r\n        }}\r\n      />\r\n      <Sound\r\n        url={MonsterAttackSound}\r\n        playStatus={Sound.status.PLAYING}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMonsterAttack.propTypes = {\r\n  setHeroHurt: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({ setHeroHurt: () => dispatch(hurtHero()) });\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(MonsterAttack);\r\n","export default function hurtHero() {\r\n  return {\r\n    type: 'SET_HURT_HERO',\r\n  };\r\n}\r\n","import MonsterIdle from './monsterIdle';\r\n\r\nexport default MonsterIdle;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React from 'react';\r\nimport MonsterIdleImage from './monsterIdle.png';\r\nimport './monsterIdle.css';\r\n\r\nconst MonsterIdle = () => {\r\n  const classIdle = 'monster-idle';\r\n  return (\r\n    <Spritesheet\r\n      className={classIdle}\r\n      image={MonsterIdleImage}\r\n      widthFrame={528}\r\n      heightFrame={358}\r\n      steps={10}\r\n      fps={10}\r\n      loop\r\n    />\r\n  );\r\n};\r\n\r\nexport default MonsterIdle;\r\n","import MonsterHurt from './monsterHurt';\r\n\r\nexport default MonsterHurt;\r\n","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Sound from 'react-sound';\r\nimport fightDefault from '../../../../actions/fightDefault';\r\nimport monsterDeath from '../../../../actions/monsterDeath';\r\nimport changeMonsterHealth from '../../../../actions/changeMonsterHealth';\r\nimport menuPage from '../../../../actions/menuPage';\r\nimport HurtMonsterSound from './hurt.mp3';\r\nimport HurtMonsterImage from './monsterHurt.png';\r\nimport './monsterHurt.css';\r\n\r\nconst MonsterHurt = (props) => {\r\n  const {\r\n    setFigthDefault,\r\n    setMonsterDeath,\r\n    setMonsterHealth,\r\n    setMenuPage,\r\n  } = props;\r\n  const { health } = props;\r\n  const hurtClass = 'monster-hurt';\r\n  return (\r\n    <Fragment>\r\n      <Spritesheet\r\n        className={hurtClass}\r\n        image={HurtMonsterImage}\r\n        widthFrame={595}\r\n        heightFrame={469}\r\n        steps={10}\r\n        fps={10}\r\n        onPause={() => {\r\n          if (health > 20) {\r\n            setMonsterHealth(-20);\r\n            setMenuPage();\r\n            setFigthDefault();\r\n          } else {\r\n            setMonsterHealth(-20);\r\n            setMonsterDeath();\r\n          }\r\n        }}\r\n      />\r\n      <Sound\r\n        url={HurtMonsterSound}\r\n        playStatus={Sound.status.PLAYING}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMonsterHurt.propTypes = {\r\n  setFigthDefault: PropTypes.func.isRequired,\r\n  setMonsterDeath: PropTypes.func.isRequired,\r\n  setMonsterHealth: PropTypes.func.isRequired,\r\n  setMenuPage: PropTypes.func.isRequired,\r\n  health: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({ health: store.health.monster });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setMonsterHealth: health => dispatch(changeMonsterHealth(health)),\r\n  setFigthDefault: () => dispatch(fightDefault()),\r\n  setMonsterDeath: () => dispatch(monsterDeath()),\r\n  setMenuPage: () => dispatch(menuPage()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(MonsterHurt);\r\n","export default function monsterDeath() {\r\n  return {\r\n    type: 'SET_MONSTER_DEATH',\r\n  };\r\n}\r\n","import MonsterDeath from './monsterDeath.js';\r\nexport default MonsterDeath;","import Spritesheet from 'react-responsive-spritesheet';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport monsterDeath from './monsterDeath.png';\r\nimport killMonster from '../../../../actions/kill';\r\nimport congratilationPage from '../../../../actions/congratilation';\r\nimport './monsterDeath.css';\r\n\r\nconst MonsterDeath = (props) => {\r\n  const { setKillMonster, setCongratilationPage } = props;\r\n  const deathClass = 'monster-death';\r\n  return (\r\n    <Spritesheet\r\n      className={deathClass}\r\n      image={monsterDeath}\r\n      widthFrame={592}\r\n      heightFrame={375}\r\n      steps={10}\r\n      fps={10}\r\n      onPause={() => {\r\n        setKillMonster();\r\n        setCongratilationPage();\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nMonsterDeath.propTypes = {\r\n  setKillMonster: PropTypes.func.isRequired,\r\n  setCongratilationPage: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setKillMonster: () => dispatch(killMonster()),\r\n  setCongratilationPage: () => dispatch(congratilationPage()),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(MonsterDeath);\r\n","export default function killMonster() {\r\n  return {\r\n    type: 'SET_KILL_MONSTER',\r\n  };\r\n}\r\n","export default function congratilationPage() {\r\n  return {\r\n    type: 'SET_CONGRATILATION_PAGE',\r\n  };\r\n}\r\n","import Monster from './monster';\r\nexport default Monster;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport MonsterAttack from '../animation/monster/monsterAttack';\r\nimport MonsterIdle from '../animation/monster/monsterIdle';\r\nimport MonsterHurt from '../animation/monster/monsterHurt';\r\nimport MonsterDeath from '../animation/monster/monsterDeath';\r\nimport Explosition from '../animation/explosition';\r\nimport Cure from '../animation/cure';\r\nimport './monster.css';\r\n\r\nconst Monster = (props) => {\r\n  const {\r\n    monsterIdle,\r\n    monsterHurt,\r\n    monsterAttack,\r\n    monsterDeath,\r\n    cureMonster,\r\n  } = props;\r\n  return (\r\n    <Fragment>\r\n      { monsterIdle && <MonsterIdle /> }\r\n      { monsterAttack && <MonsterAttack /> }\r\n      { monsterHurt && <MonsterHurt /> }\r\n      { monsterDeath && <MonsterDeath /> }\r\n      <div className=\"monsterExplosition\">\r\n        {monsterHurt && <Explosition />}\r\n        { cureMonster && <Cure /> }\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMonster.propTypes = {\r\n  monsterIdle: PropTypes.bool.isRequired,\r\n  monsterHurt: PropTypes.bool.isRequired,\r\n  monsterAttack: PropTypes.bool.isRequired,\r\n  monsterDeath: PropTypes.bool.isRequired,\r\n  cureMonster: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  monsterIdle: store.figth.monsterIdle,\r\n  monsterHurt: store.figth.monsterHurt,\r\n  monsterAttack: store.figth.monsterAttack,\r\n  monsterDeath: store.figth.monsterDeath,\r\n  cureMonster: store.cure.cureMonster,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null,\r\n)(Monster);\r\n","import HeroHealth from './healthHero';\r\n\r\nexport default HeroHealth;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './healthHero.css';\r\n\r\nconst HeroHealth = (props) => {\r\n  const { login, health } = props;\r\n\r\n  const divStyle = {\r\n    border: '2px solid white',\r\n    background: 'red',\r\n    width: `${health * 2}px`,\r\n    height: '30px',\r\n    text: 'center',\r\n  };\r\n\r\n  if (health) {\r\n    return (\r\n      <div className=\"health\">\r\n        <h3>{login}</h3>\r\n        <div style={divStyle}><h4>{health}</h4></div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"skullHero\" />\r\n  );\r\n};\r\n\r\nHeroHealth.propTypes = {\r\n  health: PropTypes.number.isRequired,\r\n  login: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  health: store.health.hero,\r\n  login: store.user.login,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null,\r\n)(HeroHealth);\r\n","import healthMonster from './healthMonster';\r\n\r\nexport default healthMonster;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport './healthMonster.css';\r\n\r\nconst MonsterHealth = (props) => {\r\n  const { health, kill } = props;\r\n\r\n  const divStyle = {\r\n    border: '2px solid white',\r\n    background: 'red',\r\n    width: `${health * 2}px`,\r\n    height: '30px',\r\n  };\r\n\r\n  if (health) {\r\n    return (\r\n      <div className=\"health\">\r\n        <h3>\r\n          Round &nbsp;\r\n          { kill + 1 }\r\n        </h3>\r\n        <div style={divStyle}><h4>{ health }</h4></div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"skull\" />\r\n  );\r\n};\r\n\r\nMonsterHealth.propTypes = {\r\n  health: PropTypes.number.isRequired,\r\n  kill: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  health: store.health.monster,\r\n  kill: store.kill.kill,\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null,\r\n)(MonsterHealth);\r\n","import Health from './health';\r\n\r\nexport default Health;\r\n","import React from 'react';\r\nimport HeroHealth from '../healthHero';\r\nimport MonsterHealth from '../healthMonster';\r\nimport './health.css';\r\n\r\nconst Health = () => (\r\n  <div className=\"flex-health\">\r\n    <HeroHealth />\r\n    <MonsterHealth />\r\n  </div>\r\n);\r\n\r\nexport default Health;\r\n","import Menu from './menu';\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\nimport mathPage from '../../actions/mathPage';\r\nimport audioPage from '../../actions/audioPage';\r\nimport translationPage from '../../actions/translationPage';\r\nimport mathKey from '../../actions/mathKey';\r\nimport audioKey from '../../actions/audioKey';\r\nimport translationKey from '../../actions/translationKey';\r\nimport './menu.css';\r\n\r\nconst Menu = (props) => {\r\n  const {\r\n    setMathPage,\r\n    setAudioPage,\r\n    setTranslatePage,\r\n    setMathKey,\r\n    setAudioKey,\r\n    setTranslationKey,\r\n  } = props;\r\n\r\n  const handleArithmetics = (event) => {\r\n    event.preventDefault();\r\n    setMathPage();\r\n  };\r\n\r\n  const handleAudio = (event) => {\r\n    event.preventDefault();\r\n    setAudioPage();\r\n  };\r\n\r\n  const handleTranslate = (event) => {\r\n    event.preventDefault();\r\n    setTranslatePage();\r\n  };\r\n\r\n  const keyHandle = (event) => {\r\n    if (event.key === '1') {\r\n      setMathKey();\r\n      setMathPage();\r\n    }\r\n\r\n    if (event.key === '2') {\r\n      setAudioKey();\r\n      setAudioPage();\r\n    }\r\n\r\n    if (event.key === '3') {\r\n      setTranslationKey();\r\n      setTranslatePage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"casts\">\r\n      <div className=\"descriptionKeyBoard\">Select task</div>\r\n      <button className=\"btn select\" type=\"button\" onClick={handleArithmetics}>Math 1</button>\r\n      <button className=\"btn select\" type=\"button\" onClick={handleAudio}>Audio 2</button>\r\n      <button className=\"btn select\" type=\"button\" onClick={handleTranslate}>Translate 3</button>\r\n      <KeyboardEventHandler\r\n        handleKeys={['1', '2', '3']}\r\n        onKeyEvent={(key, e) => keyHandle(e)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nMenu.propTypes = {\r\n  setMathPage: PropTypes.func.isRequired,\r\n  setAudioPage: PropTypes.func.isRequired,\r\n  setTranslatePage: PropTypes.func.isRequired,\r\n  setMathKey: PropTypes.func.isRequired,\r\n  setAudioKey: PropTypes.func.isRequired,\r\n  setTranslationKey: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setMathPage: () => dispatch(mathPage()),\r\n  setAudioPage: () => dispatch(audioPage()),\r\n  setTranslatePage: () => dispatch(translationPage()),\r\n  setMathKey: () => dispatch(mathKey()),\r\n  setAudioKey: () => dispatch(audioKey()),\r\n  setTranslationKey: () => dispatch(translationKey()),\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Menu);\r\n","export default function mathPage() {\r\n  return {\r\n    type: 'SET_MATH_PAGE',\r\n  };\r\n}\r\n","export default function audioPage() {\r\n  return {\r\n    type: 'SET_AUDIO_PAGE',\r\n  };\r\n}\r\n","export default function translationPage() {\r\n  return {\r\n    type: 'SET_TRANSLATION_PAGE',\r\n  };\r\n}\r\n","export default function mathKey() {\r\n  return {\r\n    type: 'SET_MATH_KEY',\r\n  };\r\n}\r\n","export default function audioKey() {\r\n  return {\r\n    type: 'SET_AUDIO_KEY',\r\n  };\r\n}\r\n","export default function translationKey() {\r\n  return {\r\n    type: 'SET_TRANSLATION_KEY',\r\n  };\r\n}\r\n","import menuPage from '../../actions/menuPage';\r\nimport cureHero from '../../actions/cureHero';\r\nimport cureMonster from '../../actions/cureMonster';\r\nimport heroAttack from '../../actions/heroAttack';\r\nimport monsterAttack from '../../actions/monsterAttack';\r\nimport hurtHero from '../../actions/hurtHero';\r\nimport heroDeath from '../../actions/heroDeath';\r\nimport monsterDeath from '../../actions/monsterDeath';\r\nimport nothingPage from '../../actions/nothingPage';\r\nimport defaultKey from '../../actions/defaultKey';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setMenuPage: () => dispatch(menuPage()),\r\n  setCureHero: () => dispatch(cureHero()),\r\n  setCureMonster: () => dispatch(cureMonster()),\r\n  setHeroAttack: () => dispatch(heroAttack()),\r\n  setMonsterAttack: () => dispatch(monsterAttack()),\r\n  setHurtHero: () => dispatch(hurtHero()),\r\n  setMonsterDeath: () => dispatch(monsterDeath()),\r\n  setHeroDeath: () => dispatch(heroDeath()),\r\n  setNothingPage: () => dispatch(nothingPage()),\r\n  setDefaultKey: () => dispatch(defaultKey()),\r\n});\r\n\r\nexport default mapDispatchToProps;\r\n","export default function cureHero() {\r\n  return {\r\n    type: 'SET_HERO_CURE',\r\n  };\r\n}\r\n","export default function cureMonster() {\r\n  return {\r\n    type: 'SET_MONSTER_CURE',\r\n  };\r\n}\r\n","export default function heroAttack() {\r\n  return {\r\n    type: 'SET_ATTACK_HERO',\r\n  };\r\n}\r\n","export default function monsterAttack() {\r\n  return {\r\n    type: 'SET_ATTACK_MONSTER',\r\n  };\r\n}\r\n","export default function nothingPage() {\r\n  return {\r\n    type: 'SET_NOTHING_PAGE',\r\n  };\r\n}\r\n","export default function defaultKey() {\r\n  return {\r\n    type: 'SET_DEFAULT_KEY',\r\n  };\r\n}\r\n","function randomMathTask() {\r\n  const firstNumber = Math.floor(Math.random() * 100);\r\n  const secondNumber = Math.floor(Math.random() * 100);\r\n  const mathOperation = Math.random() > 0.5 ? '+' : '-';\r\n  const result = mathOperation === '+' ? (firstNumber + secondNumber) : (firstNumber - secondNumber);\r\n  return {\r\n    firstNumber,\r\n    secondNumber,\r\n    mathOperation,\r\n    result,\r\n  };\r\n}\r\n\r\nexport default randomMathTask;\r\n","import Buttons from './buttons';\r\n\r\nexport default Buttons;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Fragment } from 'react';\r\n\r\nconst Buttons = (props) => {\r\n  const { attack, cure, menu } = props;\r\n  return (\r\n  <Fragment>\r\n    <button type=\"submit\" className=\"send btn select\" onClick={attack}>Attack(Enter)</button>\r\n    <button type=\"submit\" className=\"send btn select\" onClick={cure}>Cure(Ctrl)</button>\r\n    <button type=\"submit\" className=\"send btn select\" onClick={menu}>Back(Esc)</button>\r\n  </Fragment>\r\n  );\r\n};\r\n\r\nButtons.propTypes = {\r\n  attack: PropTypes.func.isRequired,\r\n  cure: PropTypes.func.isRequired,\r\n  menu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Buttons;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport mapDispatchToProps from '../mapDispatchToProps/mapDispatchToProps';\r\nimport randomMathTask from './randomMathTask';\r\nimport Buttons from '../buttons';\r\nimport './mathematics.css';\r\n\r\nclass Mathematics extends Component {\r\n  state = {\r\n    firstNumber: null,\r\n    secondNumber: null,\r\n    result: null,\r\n    value: '',\r\n  }\r\n\r\n  textInput = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.setState(prevState => (\r\n      Object.assign(prevState, randomMathTask())\r\n    ));\r\n    this.textInput.current.focus();\r\n  }\r\n\r\n  heroCure = () => {\r\n    const {\r\n      setCureHero,\r\n      setCureMonster,\r\n      setNothingPage,\r\n    } = this.props;\r\n    const { value, result } = this.state;\r\n    if (parseInt(value, 10) === result) setCureHero();\r\n    else setCureMonster();\r\n    setNothingPage();\r\n  }\r\n\r\n  heroAttack = () => {\r\n    const {\r\n      setHeroAttack,\r\n      setMonsterAttack,\r\n      setNothingPage,\r\n    } = this.props;\r\n    const { value, result } = this.state;\r\n    if (parseInt(value, 10) === result) {\r\n      setHeroAttack();\r\n    } else {\r\n      setMonsterAttack();\r\n    }\r\n    setNothingPage();\r\n  }\r\n\r\n  handleMenu = (event) => {\r\n    const { setMenuPage } = this.props;\r\n    event.preventDefault();\r\n    setMenuPage();\r\n  };\r\n\r\n  handleHeroAttack = (event) => {\r\n    event.preventDefault();\r\n    this.heroAttack();\r\n  };\r\n\r\n  handleHeroCure = (event) => {\r\n    event.preventDefault();\r\n    this.heroCure();\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { keyboard, setDefaultKey } = this.props;\r\n    this.setState({ value: event.target.value });\r\n    if (keyboard) {\r\n      this.setState({ value: '' });\r\n      setDefaultKey();\r\n    }\r\n  }\r\n\r\n  handleKeyHeroAttack = (event) => {\r\n    const { setMenuPage } = this.props;\r\n    if (event.key === 'Enter') {\r\n      this.heroAttack();\r\n    }\r\n\r\n    if (event.key === 'Escape') {\r\n      setMenuPage();\r\n    }\r\n\r\n    if (event.ctrlKey) {\r\n      this.heroCure();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      firstNumber,\r\n      secondNumber,\r\n      mathOperation,\r\n      value,\r\n    } = this.state;\r\n    return (\r\n      <div className=\"mathMet\">\r\n        <span className=\"taskHeading\">Solve an example:</span>\r\n        <span className=\"task\">\r\n          {firstNumber}\r\n          &nbsp;\r\n          {mathOperation}\r\n          &nbsp;\r\n          {secondNumber}\r\n        </span>\r\n        <span className=\"taskHeading\">Your answer:</span>\r\n        <input type=\"text\" ref={this.textInput} value={value} onChange={this.handleChange} onKeyDown={this.handleKeyHeroAttack} />\r\n        <Buttons attack={this.handleHeroAttack} cure={this.handleHeroCure} menu={this.handleMenu} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMathematics.propTypes = {\r\n  setMenuPage: PropTypes.func.isRequired,\r\n  setDefaultKey: PropTypes.func.isRequired,\r\n  setMonsterAttack: PropTypes.func.isRequired,\r\n  setNothingPage: PropTypes.func.isRequired,\r\n  setHeroAttack: PropTypes.func.isRequired,\r\n  setCureHero: PropTypes.func.isRequired,\r\n  setCureMonster: PropTypes.func.isRequired,\r\n  keyboard: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({ keyboard: store.keyboard.mathKey });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Mathematics);\r\n","import Mathematics from './mathematics';\r\n\r\nexport default Mathematics;\r\n","import blink from './blink.wav';\r\nimport bound from './bound.wav';\r\nimport dangle from './dangle.wav';\r\nimport endure from './endure.wav';\r\nimport fabulous from './fabulous.wav';\r\nimport faucet from './faucet.wav';\r\nimport glisten from './glisten.wav';\r\nimport jolt from './jolt.wav';\r\nimport marble from './marble.wav';\r\nimport smear from './smear.wav';\r\nimport vicious from './vicious.wav';\r\nimport incisive from './incisive.wav';\r\nimport recluse from './recluse.wav';\r\nimport diminish from './diminish.wav';\r\nimport motto from './motto.wav';\r\nimport residue from './residue.wav';\r\nimport nausea from './nausea.wav';\r\nimport obnoxious from './obnoxious.wav';\r\nimport scatter from './scatter.wav';\r\nimport snarl from './snarl.wav';\r\nimport carve from './carve.wav';\r\nimport tremble from './tremble.wav';\r\nimport intersection from './intersection.wav';\r\nimport inept from './inept.wav';\r\nimport pervert from './pervert.wav';\r\nimport nasty from './nasty.wav';\r\nimport mock from './mock.wav';\r\nimport sag from './sag.wav';\r\nimport thaw from './thaw.wav';\r\nimport throb from './throb.wav';\r\nimport caress from './caress.wav';\r\n\r\nconst audioObject = {\r\n  blink,\r\n  bound,\r\n  dangle,\r\n  endure,\r\n  fabulous,\r\n  faucet,\r\n  glisten,\r\n  jolt,\r\n  marble,\r\n  smear,\r\n  vicious,\r\n  incisive,\r\n  recluse,\r\n  diminish,\r\n  motto,\r\n  residue,\r\n  nausea,\r\n  obnoxious,\r\n  scatter,\r\n  snarl,\r\n  carve,\r\n  tremble,\r\n  intersection,\r\n  inept,\r\n  pervert,\r\n  nasty,\r\n  mock,\r\n  sag,\r\n  thaw,\r\n  throb,\r\n  caress,\r\n};\r\n\r\nexport default audioObject;\r\n","function audioGuess(obj) {\r\n  const keys = Object.keys(obj);\r\n  return keys[Math.floor(keys.length * Math.random())];\r\n}\r\n\r\nexport default audioGuess;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport PropTypes from 'prop-types';\r\nimport mapDispatchToProps from '../mapDispatchToProps/mapDispatchToProps';\r\nimport { audioObject, audioGuess } from './pronunciation';\r\nimport Buttons from '../buttons';\r\nimport './audio.css';\r\n\r\nclass Audio extends Component {\r\n  state = {\r\n    value: '',\r\n    randomKey: '',\r\n  }\r\n\r\n  audio = React.createRef();\r\n\r\n  textInput = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.setState({ randomKey: audioGuess(audioObject) });\r\n    this.textInput.current.focus();\r\n  }\r\n\r\n  handleMenu = (event) => {\r\n    const { setMenuPage } = this.props;\r\n    event.preventDefault();\r\n    setMenuPage();\r\n  };\r\n\r\n  heroCure = () => {\r\n    const {\r\n      setCureHero,\r\n      setCureMonster,\r\n      setNothingPage,\r\n    } = this.props;\r\n    const { value, randomKey } = this.state;\r\n    if (value === randomKey) setCureHero();\r\n    else setCureMonster();\r\n    setNothingPage();\r\n  }\r\n\r\n  heroAttack = () => {\r\n    const {\r\n      setHeroAttack,\r\n      setMonsterAttack,\r\n      setNothingPage,\r\n    } = this.props;\r\n    const { value, randomKey } = this.state;\r\n    if (value === randomKey) {\r\n      setHeroAttack();\r\n    } else {\r\n      setMonsterAttack();\r\n    }\r\n    setNothingPage();\r\n  }\r\n\r\n  handleHeroAttack = (event) => {\r\n    event.preventDefault();\r\n    this.heroAttack();\r\n  };\r\n\r\n  handleHeroCure = (event) => {\r\n    event.preventDefault();\r\n    this.heroCure();\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { keyboard, setDefaultKey } = this.props;\r\n    this.setState({ value: event.target.value });\r\n    if (keyboard) {\r\n      this.setState({ value: '' });\r\n      setDefaultKey();\r\n    }\r\n  }\r\n\r\n  handleKeyHeroAttack = (event) => {\r\n    const { setMenuPage } = this.props;\r\n\r\n    if (event.key === 'Enter') {\r\n      this.heroAttack();\r\n    }\r\n\r\n    if (event.key === 'Escape') {\r\n      setMenuPage();\r\n    }\r\n\r\n    if (event.ctrlKey) {\r\n      this.heroCure();\r\n    }\r\n\r\n    if (event.key === 'Shift') {\r\n      this.audio.current.audioEl.play();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { value, randomKey } = this.state;\r\n    return (\r\n      <div className=\"audioMet\">\r\n        <span className=\"taskHeading\">Enter the word that you heard(Use Shift to listen word):</span>\r\n        <span className=\"task\">\r\n          <ReactAudioPlayer\r\n            ref={this.audio}\r\n            src={audioObject[randomKey]}\r\n            controls\r\n          />\r\n        </span>\r\n        <span className=\"taskHeading\">Your answer:</span>\r\n        <input type=\"text\" ref={this.textInput} value={value} onChange={this.handleChange} onKeyDown={this.handleKeyHeroAttack} />\r\n        <Buttons attack={this.handleHeroAttack} cure={this.handleHeroCure} menu={this.handleMenu} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAudio.propTypes = {\r\n  setMenuPage: PropTypes.func.isRequired,\r\n  setDefaultKey: PropTypes.func.isRequired,\r\n  setMonsterAttack: PropTypes.func.isRequired,\r\n  setNothingPage: PropTypes.func.isRequired,\r\n  setHeroAttack: PropTypes.func.isRequired,\r\n  setCureHero: PropTypes.func.isRequired,\r\n  setCureMonster: PropTypes.func.isRequired,\r\n  keyboard: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({ keyboard: store.keyboard.audioKey });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Audio);\r\n","import Audio from './audio';\r\n\r\nexport default Audio;\r\n","const translationObject = {\r\n  blink: ['моргать', 'мигать'],\r\n  bound: ['непременный', 'обязательный', 'обязанный', 'направляющийся'],\r\n  dangle: ['свисать', 'манить', 'соблазнять'],\r\n  endure: ['выносить', 'выдерживать'],\r\n  fabulous: ['невероятный', 'потрясающий'],\r\n  faucet: ['кран'],\r\n  glisten: ['блестеть'],\r\n  jolt: ['толчок', 'потрясение'],\r\n  marble: ['мрамор'],\r\n  smear: ['мазать', 'размазывать', 'порочить', 'пятнать'],\r\n  vicious: ['жестокий', 'злой', 'злонамерный'],\r\n  incisive: ['проницательный', 'острый'],\r\n  recluse: ['затворник'],\r\n  diminish: ['уменьшать', 'уменьшаться', 'ослабевать'],\r\n  motto: ['девиз'],\r\n  residue: ['остаток', 'осадок'],\r\n  nausea: ['тошнота'],\r\n  obnoxious: ['оскорбительный', 'мерзкий'],\r\n  scatter: ['разбрасывать'],\r\n  snarl: ['рычать', 'огрызаться'],\r\n  carve: ['вырезать', 'резать'],\r\n  tremble: ['дрожать', 'трястись'],\r\n  intersection: ['перекресток'],\r\n  inept: ['неумелый', 'неспособный'],\r\n  pervert: ['извращенец'],\r\n  nasty: ['ужасный', 'противный', 'злобный', 'гадкий', 'угрожающий', 'опасный'],\r\n  mock: ['осмеивать', 'насмехаться'],\r\n  sag: ['прогибаться', 'провисать', 'ослабевать'],\r\n  thaw: ['таять', 'размораживать', 'теплеть'],\r\n  throb: ['пульсировать', 'сотрясаться'],\r\n  caress: ['ласкать'],\r\n};\r\n\r\nexport default translationObject;\r\n","function translationGuess(obj) {\r\n  const keys = Object.keys(obj);\r\n  return keys[Math.floor(keys.length * Math.random())];\r\n}\r\n\r\nexport default translationGuess;\r\n","import React, { Fragment, Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport mapDispatchToProps from '../mapDispatchToProps/mapDispatchToProps';\r\nimport { translationObject, translationGuess } from './vocabulary';\r\nimport Buttons from '../buttons';\r\nimport './translation.css';\r\n\r\nclass Translation extends Component {\r\n  state = {\r\n    value: '',\r\n    randomKey: '',\r\n  };\r\n\r\n  textInput = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.setState({ randomKey: translationGuess(translationObject) });\r\n    this.textInput.current.focus();\r\n  }\r\n\r\n  handleMenu = (event) => {\r\n    const { setMenuPage } = this.props;\r\n    event.preventDefault();\r\n    setMenuPage();\r\n  };\r\n\r\n  heroCure = () => {\r\n    const {\r\n      setCureHero,\r\n      setCureMonster,\r\n      setNothingPage,\r\n    } = this.props;\r\n    const {\r\n      value,\r\n      randomKey,\r\n    } = this.state;\r\n    if (translationObject[randomKey].includes(value)) setCureHero();\r\n    else setCureMonster();\r\n    setNothingPage();\r\n  }\r\n\r\n  heroAttack = () => {\r\n    const {\r\n      setHeroAttack,\r\n      setMonsterAttack,\r\n      setNothingPage,\r\n    } = this.props;\r\n    const {\r\n      value,\r\n      randomKey,\r\n    } = this.state;\r\n    if (translationObject[randomKey].includes(value)) {\r\n      setHeroAttack();\r\n    } else {\r\n      setMonsterAttack();\r\n    }\r\n    setNothingPage();\r\n  }\r\n\r\n  handleHeroAttack = (event) => {\r\n    event.preventDefault();\r\n    this.heroAttack();\r\n  };\r\n\r\n  handleHeroCure = (event) => {\r\n    event.preventDefault();\r\n    this.heroCure();\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { keyboard, setDefaultKey } = this.props;\r\n    this.setState({ value: event.target.value });\r\n    if (keyboard) {\r\n      this.setState({ value: '' });\r\n      setDefaultKey();\r\n    }\r\n  }\r\n\r\n  handleKeyHeroAttack = (event) => {\r\n    const { setMenuPage } = this.props;\r\n\r\n    if (event.key === 'Enter') {\r\n      this.heroAttack();\r\n    }\r\n\r\n    if (event.key === 'Escape') {\r\n      setMenuPage();\r\n    }\r\n\r\n    if (event.ctrlKey) {\r\n      this.heroCure();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { randomKey, value } = this.state;\r\n    return (\r\n      <Fragment>\r\n        <div className=\"translationMet\">\r\n          <span className=\"taskHeading\">{randomKey}</span>\r\n          <span className=\"taskHeading\">Your answer:</span>\r\n          <input type=\"text\" id=\"userAudioInput\" ref={this.textInput} value={value} onChange={this.handleChange} onKeyDown={this.handleKeyHeroAttack} />\r\n          <Buttons attack={this.handleHeroAttack} cure={this.handleHeroCure} menu={this.handleMenu} />\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTranslation.propTypes = {\r\n  setMenuPage: PropTypes.func.isRequired,\r\n  setDefaultKey: PropTypes.func.isRequired,\r\n  setMonsterAttack: PropTypes.func.isRequired,\r\n  setNothingPage: PropTypes.func.isRequired,\r\n  setHeroAttack: PropTypes.func.isRequired,\r\n  setCureHero: PropTypes.func.isRequired,\r\n  setCureMonster: PropTypes.func.isRequired,\r\n  keyboard: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({ keyboard: store.keyboard.translationKey });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(Translation);\r\n","import Translation from './translation';\r\n\r\nexport default Translation;\r\n","const link = 'https://simplegameforfun.herokuapp.com/record/';\r\n\r\nexport default link;\r\n","import link from './link';\r\n\r\nconst retrieveRecordTable = () => (\r\n  new Promise((resolve, reject) => {\r\n    fetch(link)\r\n      .then(response => response.json())\r\n      .then((response) => {\r\n        if (response.record) resolve(response.record);\r\n        else resolve([]);\r\n      })\r\n      .catch(err => reject(err));\r\n  }));\r\n\r\nexport default retrieveRecordTable;\r\n","function sortFunction(a, b) {\r\n  return (b.round - a.round);\r\n}\r\n\r\nconst topTen = array => (\r\n  new Promise((resolve) => {\r\n    const arrayA = [...array];\r\n    resolve(arrayA\r\n      .sort(sortFunction)\r\n      .slice(0, 20));\r\n  }));\r\n\r\nexport default topTen;\r\n","import retrieveRecordTable from '../retrieve/retrieve';\r\nimport topTen from '../retrieve/topTen';\r\n\r\nconst LOAD_RECORDS_LOADING = 'LOAD_RECORDS_LOADING';\r\n\r\nconst tableRecord = () => (dispatch) => {\r\n  dispatch({ type: LOAD_RECORDS_LOADING });\r\n\r\n  retrieveRecordTable()\r\n    .then(data => topTen(data))\r\n    .then((data) => {\r\n      if (data.length) dispatch({ type: 'LOAD_RECORDS_SUCCESS', data });\r\n      else dispatch({ type: 'LOAD_RECORDS_ERROR', error: 'Unexpected Error!!!' });\r\n    });\r\n};\r\n\r\nexport default tableRecord;\r\n","import link from './link';\r\n\r\nconst addRowInTable = (login, round) => (\r\n  new Promise((resolve, reject) => {\r\n    fetch(link, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        login: `${login}`,\r\n        round: `${round}`,\r\n      }),\r\n    })\r\n      .then(data => resolve(data))\r\n      .catch(err => reject(err));\r\n  }));\r\n\r\nexport default addRowInTable;\r\n","import Loader from './loader';\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport './loader.css';\r\n\r\nconst Loader = () => (\r\n  <div className=\"lds-spinner\">\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n    <div />\r\n  </div>\r\n);\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport tableRecord from '../../actions/getTableRecord';\r\nimport addRowInTable from '../../retrieve/addRowInTable';\r\nimport Loader from '../loader';\r\nimport './tablerecord.css';\r\n\r\nclass TableRecord extends Component {\r\n  componentDidMount() {\r\n    const { login, kill, getTableRecord } = this.props;\r\n    addRowInTable(login, kill)\r\n      .then(() => getTableRecord())\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const { loading, data, error } = this.props;\r\n\r\n    if (loading) { return <Loader />; }\r\n\r\n    if (error) {\r\n      return (\r\n        <h1 style={{ color: 'red' }}>\r\n          ERROR:\r\n          &nbsp;\r\n          {error}\r\n        </h1>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"tablerecord\">\r\n        <table className=\"record\">\r\n          <thead>\r\n            <tr>\r\n              <th>Login</th>\r\n              <th>Top 20 results</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map(item => (\r\n              <tr key={item.id}>\r\n                <td>{item.login}</td>\r\n                <td>{item.round}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        <button className=\"btn select newgame\" type=\"button\" onClick={() => window.location.reload()}>New Game(F5)</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTableRecord.propTypes = {\r\n  login: PropTypes.string.isRequired,\r\n  kill: PropTypes.number.isRequired,\r\n  getTableRecord: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  error: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  login: store.user.login,\r\n  kill: store.kill.kill,\r\n  data: store.records.data,\r\n  loading: store.records.loading,\r\n  error: store.records.error,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getTableRecord: () => dispatch(tableRecord()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(TableRecord);\r\n","import RecordTable from './tablerecord';\r\n\r\nexport default RecordTable;\r\n","import Congratilation from './congratilation';\r\n\r\nexport default Congratilation;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\nimport PropTypes from 'prop-types';\r\nimport changeMonsterHealth from '../../actions/changeMonsterHealth';\r\nimport fightDefault from '../../actions/fightDefault';\r\nimport menuPage from '../../actions/menuPage';\r\nimport './congratilation.css';\r\n\r\nconst Congratilation = (props) => {\r\n  const {\r\n    setMonsterHealth,\r\n    setFigthDefault,\r\n    setMenuPage,\r\n  } = props;\r\n\r\n  const handleNewMonster = (event) => {\r\n    event.preventDefault();\r\n    setMonsterHealth(100);\r\n    setMenuPage();\r\n    setFigthDefault();\r\n  };\r\n\r\n  const keyHandle = (event) => {\r\n    if (event.key === 'Enter') {\r\n      setMonsterHealth(100);\r\n      setMenuPage();\r\n      setFigthDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"congratWindow\">\r\n      <span className=\"congratilation\">Congratilation! You win!</span>\r\n      <button className=\"btn select\" type=\"button\" onClick={handleNewMonster}>Next</button>\r\n      <KeyboardEventHandler\r\n        handleKeys={['Enter']}\r\n        onKeyEvent={(key, e) => keyHandle(e)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nCongratilation.propTypes = {\r\n  setMonsterHealth: PropTypes.func.isRequired,\r\n  setFigthDefault: PropTypes.func.isRequired,\r\n  setMenuPage: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setMonsterHealth: health => dispatch(changeMonsterHealth(health)),\r\n  setFigthDefault: () => dispatch(fightDefault()),\r\n  setMenuPage: () => dispatch(menuPage()),\r\n});\r\n\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps,\r\n)(Congratilation);\r\n","import ModalWindow from './modalWindow';\r\n\r\nexport default ModalWindow;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Menu from '../menu';\r\nimport Mathematics from '../mathematics';\r\nimport Audio from '../audio';\r\nimport Translation from '../translation';\r\nimport TableRecord from '../tableRecord';\r\nimport Congratilation from '../congratilation';\r\n\r\nconst ModalWindow = (props) => {\r\n  const {\r\n    math,\r\n    menu,\r\n    audio,\r\n    translation,\r\n    record,\r\n    congratilation,\r\n  } = props;\r\n  return (\r\n    <div className=\"menuTask\">\r\n      { menu && <Menu /> }\r\n      { math && <Mathematics /> }\r\n      { audio && <Audio /> }\r\n      { translation && <Translation /> }\r\n      { record && <TableRecord />}\r\n      { congratilation && <Congratilation />}\r\n    </div>\r\n  );\r\n};\r\n\r\nModalWindow.propTypes = {\r\n  math: PropTypes.bool.isRequired,\r\n  menu: PropTypes.bool.isRequired,\r\n  audio: PropTypes.bool.isRequired,\r\n  translation: PropTypes.bool.isRequired,\r\n  record: PropTypes.bool.isRequired,\r\n  congratilation: PropTypes.bool.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({\r\n  math: store.layout.math,\r\n  menu: store.layout.menu,\r\n  audio: store.layout.audio,\r\n  translation: store.layout.translation,\r\n  record: store.layout.record,\r\n  congratilation: store.layout.congratilation,\r\n});\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null,\r\n)(ModalWindow);\r\n","import React from 'react';\r\nimport Hero from '../hero';\r\nimport Monster from '../monster';\r\nimport HealthCommon from '../health/healthCommon';\r\nimport ModalWindow from '../modalWindow';\r\nimport './gameLayout.css';\r\n\r\nconst GameLayout = () => (\r\n  <div className=\"layout\">\r\n    <HealthCommon />\r\n    <ModalWindow />\r\n    <div className=\"fightArea\">\r\n      <Hero />\r\n      <Monster />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default GameLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Login from './components/loginPage/login';\r\nimport GameLayout from './components/gameLayout/gameLayout';\r\nimport './App.css';\r\n\r\nconst App = (props) => {\r\n  const { login } = props;\r\n  return (\r\n    <div className=\"App\">\r\n      { !login && <Login /> }\r\n      { login && <GameLayout /> }\r\n    </div>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  login: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = store => ({ login: store.user.login });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/configureStore';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}